{
  "version": "https://jsonfeed.org/version/1",
  "title": "Noob Studio",
  "description": "บล๊อคเก็บรวบรวมความรู้ ประสบการณ์ เทคนิคและผลงานต่างๆอาธิ Javascript, Java, PHP, Linux, Open Source",
  "home_page_url": "http://localhost:4000",
  "feed_url": "http://localhost:4000/feed.json",
  "favicon": "http://localhost:4000/favicon.png",
  
  "items": [
    
    
    {
      "id": "http://localhost:4000/2018/01/18/seneca-nodejs-microservice/",
      "url": "http://localhost:4000/2018/01/18/seneca-nodejs-microservice/",
      "title": "เขียน Microservice ด้วย Node.js และ Seneca.js",
      "image": "img/seneca/cover.jpg",
      "content_html": "<p>\nในช่วง 2-3 ปีที่ผ่านกระแส Microservice ได้มาแรงมากๆ โดยที่ทำงานผมปัจจุบันแอพพลิเคชัน แอพเดียวนี่มี Microservice support อยู่หลังบ้านเป็น 10 ระบบแล้ว ดังนั้นถ้าผมไม่พูดถึงมันจะไม่เทรนนะจ๊ะ แต่จะไม่ลงรายละเอียดในส่วนของทฤษฎีเยอะนะครับเพราะมีพี่ๆ เขียนไว้เยอะแล้ว เรามันสายบู๊อยู่แล้วว่ะฮ่ะฮ่ะ\n</p>\n<h2 class=\"section-heading\">Microservice คืออะไร</h2>\n<p>\nMicroservice คือแนวคิดการพัฒนาโปรแกรมแบบแยกโปรแกรมเป็นส่วนเล็กๆ ที่สามารถทำงานแยกออกจากกันได้มี environment แยกออกจากกัน แต่ก็สามารถทำงานร่วมกันได้เพื่อรวมกันกลายเป็นระบบที่ใหญ่ขึ้น ยกตัวอย่างเช่น ระบบธนาคาร (คลาสสิคสุดๆ) ในระบบธนาคารหนึ่งธนาคารก็จะมีระบบต่างๆ ประมาณนี้<br /><br />\n\t1. payment โอนเงิน / จ่ายเงิน<br />\n\t2. balance จัดการยอดเงินผู้ใช้<br />\n\t3. deposit ฝากเงิน<br />\n\t4. sms แจ้งเตือนฝากถอน<br /><br />\n\tอันนี้คือตัวอย่างคร่าวๆ นะครับจากตัวอย่างเราจะเห็นว่าถ้าเป็นสมัยก่อนเขียนไว้ในระบบเดียวกัน (Monolithic) ซึ่งจะว่าดีก็ดีในแบบของเค้านะครับแต่ว่าเราจะไม่พูดเพราะก็คงรู้ๆ กันอยู่แล้ว ข้อเสียที่สำคัญของสถาปัตยกรรมลักษณะนี้คือ<br /><br />\n\t1. ถ้าระบบล่มจะล่มหมดเลย<br />\n\t2. ทั้งทีมจำเป็นต้องถนัดเครื่องมือเดียวกันเช่น ถ้าใช้ Node.js ก็ต้อง Node.js ทั้งระบบ<br />\n\t3. ดูแลรักษายาก<br /><br />\n\tนี่แค่ที่ผมคิดออกนะครับเพราะเหตุนี้แนวคิด Mircroservice จึงเกิดขึ้นเพื่อมาแก้ปัญหาของสถาปัตยกรรมแบบเก่าโดยเขียนระบบที่กล่าวมาข้างต้น แยกกันดังนี้<br /><br />\n\t1. payment โอนเงิน / จ่ายเงิน อย่างเดียวสายเปย์ ฐานข้อมูลก็เก็บแค่ transaction ที่โอนอย่างเดียว<br />\n\t2. balance จัดการยอดเงิน วันๆทำแต่บัญชีอย่างเดียวไม่ต้องทำอะไรละ ฐานข้อมูลเก็บแค่ยอดเงินของผู้ใช้แต่ละคนพอ<br />\n\t3. deposit ฝากเงิน ฝากเดียวจ้างกใครให้เงินมาเก็บๆ อย่างเดียวไม่สนใจอะไร ฐานข้อมูลก็เก็บแค่ transaction ที่ถอนอย่างเดียว<br />\n\t4. sms แจ้งเตือนฝากถอนฟ้องอย่างเดียวจ้าใครฝากใครถอนโอนเงินให้ใครรู้หมดเก็บแค่ข้อมูล sms ที่ออกไปก็พอ<br /><br />\n\tจะเห็นว่าถ้าออกแบบสถาปัตยกรรมระบบในรูปแบบนี้จะช่วยแก้ปัญหาที่กล่าวมาข้างต้นได้ถ้าระบบใดระบบหนึ่งล่มระบบอื่นก็ยังสามารถทำงานอยู่ได้ เช่น โอนเงินล่ม แต่ก็ยังสามารถฝากเงินได้อยู่ดี ทีม balance อยากใช้ PHP ทีม sms จะใช้ node.js ก็ไม่มีปัญหาระบบไหนพังก็ดูแลเป็นระบบๆ ไป\n</p>\n<h2 class=\"section-heading\">ปัญหาของ Microservice</h2>\n<p>\nถึง Microservice จะดูเทพมากมายขนาดไหนก็ยังมีปัญหาเรื่องความซ้ำซ้อนของระบบและการคุยกันระหว่าง service อยู่ดีเช่น การถอนเงินจากสถาปัตยกรรมของระบบข้างต้นถ้าผู้ใช้จะถอนเงินก็จะมี flow ประมาณนี้\n</p>\n<p><img src=\"/img/seneca/seneca-1.png\" alt=\"เขียน Microservice ด้วย Node.js และ Seneca.js\" /></p>\n<p>\nจาก flow จะเห็นว่าเมื่อโอนเงินเสร็จระบบ payment ต้องส่งข้อความไปถึงสองครั้งเพื่อบอกระบบ sms กับ balance ว่าโอนเงินเสร็จแล้วนะ แล้วถ้าเกิดวันนึงอยากจะเพิ่มระบบ log เพื่อมาเก็บ transaction เข้าออกของทั้งระบบ แต่ละทีมก็ต้องไป implement เพิ่มเพื่อให้ส่งข้อความไปบอกระบบ log ว่าโอนแล้วนะ ฝากแล้วนะ ส่ง sms แล้วนะ อีกวุ่นวายเข้าไปใหญ่\n</p>\n<h2 class=\"section-heading\">แนวคิดของ Seneca.js</h2>\n<p>\nจากปัญหาข้างบนจึงมีคนคิดขึ้นมาได้ว่าถ้างั้นแทนที่เราจะส่งต้องข้อความไปบอกทีละ Microservice ว่าทำนั่นแล้วนะทำนี่แล้วนะ เราก็ให้ Microservice ของเราตะโกนไปว่าฉันทำเสร็จแล้วนะ ทีนี้ Microservice ตัวไหนที่รออยู่ก็สามารถรับข้อความไปได้เลยไม่ต้องไล่ส่งข้อความไปบอกทีละคนอยู่ ถ้าต่อไปมี Microservice อื่นที่ต้องใช้ข้อความนี้ก็เอามาประกอบได้เลยไม่ต้องไปแก้อันเก่าแค่รอรับข้อความก็พอ ซึ่งก็คือ Seneca.jsนั่นเอง Seneca.js เนี่ยเค้าบอกว่าตัวเองคือ\n</p>\n<blockquote>\nSeneca is a microservices toolkit for Node.js.\nIt helps you write clean, organized code that you can scale and deploy at any time.\n</blockquote>\n<p>\nแปลไทยก็ประมาณว่า seneca คือเครื่องมือที่ช่วยให้สถาปัตยกรรม Microservice ที่ implement ด้วย Node.js ชีวิตดีขึ้นว่างั้นเถอะ (สรุปเอาดื้อๆ) มันจะดีอย่างที่เค้าว่าหรือเปล่า ต่อไปเรามาลองใช้ Seneca.js กันนะครับ โดยเพื่อความสมจริง เราจะทำ Microservice 2 ตัวดังนี้ <br /><br />\n1. interface รับชื่อมาจาก Microservice<br />\n2. hello เอาชื่อมาส่งข้อความกลับไปว่า Hello ‘...'<br />\n</p>\n<h2 class=\"section-heading\">Install</h2>\n<pre>\n//interface service\nmkdir interface\ncd interface\nnpm init\nnpm install seneca express body-parser --save\n\n//plus service\nmkdir plus\ncd plus\nnpm init\nnpm install seneca --save\n</pre>\n<h2 class=\"section-heading\">Implement Seneca</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"c1\">//interface service</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'express'</span><span class=\"p\">)(),</span>\n      <span class=\"nx\">seneca</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'seneca'</span><span class=\"p\">)();</span>\n                    \n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n   <span class=\"kd\">let</span> <span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">query</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">;</span>\n   <span class=\"nx\">seneca</span><span class=\"p\">.</span><span class=\"nx\">client</span><span class=\"p\">().</span><span class=\"nx\">act</span><span class=\"p\">({</span><span class=\"na\">service</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"nx\">name</span><span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n       <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n       <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">answer</span><span class=\"p\">)</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">})</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">3000</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Listening on port: 3000'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>\nจาก Code ข้างบนจะเห็นว่าก็ใช้ express ธรรมดาสิ่งที่อยากให้โฟกัสก็คือ\n</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">seneca</span><span class=\"p\">.</span><span class=\"nx\">client</span><span class=\"p\">().</span><span class=\"nx\">act</span><span class=\"p\">({</span><span class=\"na\">service</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"nx\">name</span><span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">answer</span><span class=\"p\">)</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>\nคำสั่ง\n</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">seneca</span><span class=\"p\">.</span><span class=\"nx\">client</span><span class=\"p\">().</span><span class=\"nx\">act</span><span class=\"p\">({</span><span class=\"na\">service</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"nx\">name</span><span class=\"p\">});</span> </code></pre></figure>\n\n<p>\nคือการสั่งให้ seneca ตะโกนออกไปนะครับ ซึ่งค่าที่ส่งไปเป็นแบบ key-value\n</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">answer</span><span class=\"p\">)</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>\nคือการ handle สิ่งที่ตอบกลับมา <br />ต่อมาเราจะมาดูในส่วนของ Microservice hello กันนะครับ\n</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"c1\">//hello service</span>\n<span class=\"kd\">const</span> <span class=\"nx\">seneca</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'seneca'</span><span class=\"p\">)();</span>\n<span class=\"kd\">let</span> <span class=\"nx\">hello</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">msg</span><span class=\"p\">,</span> <span class=\"nx\">reply</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">reply</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"na\">answer</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'Hello '</span> <span class=\"o\">+</span> <span class=\"nx\">msg</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">)})</span>\n<span class=\"p\">};</span>\n\n<span class=\"nx\">seneca</span><span class=\"p\">.</span><span class=\"nx\">add</span><span class=\"p\">(</span><span class=\"s1\">'service:hello'</span><span class=\"p\">,</span> <span class=\"nx\">hello</span><span class=\"p\">).</span><span class=\"nx\">listen</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>คำสั่ง </p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">seneca</span><span class=\"p\">.</span><span class=\"nx\">add</span><span class=\"p\">(</span><span class=\"s1\">'service:hello'</span><span class=\"p\">,</span> <span class=\"nx\">hello</span><span class=\"p\">).</span><span class=\"nx\">listen</span><span class=\"p\">();</span> </code></pre></figure>\n\n<p>\nคือการบอกให้รอฟังสิ่งที่ service อื่นตะโกนมานะครับโดยจะต้อง match กับ <pre>'service:hello'</pre> เท่านั้นถึงจะทำงาน แล้วเราก็ส่ง function hello เข้าไปเพียงแค่นี้พอเราลองรัน service ทั้งสองตัวและเรียกไปที่ <a href=\"http://localhost:3000?name=noob\" target=\"_blank\">http://localhost:3000?name=noob</a> ก็จะมี response ตอบกลับมาตามรูปนะจ๊ะ\n</p>\n<p><img src=\"/img/seneca/reponse.png\" alt=\"เขียน Microservice ด้วย Node.js และ Seneca.js\" /></p>\n<p>หากต้องการ fix port, protocol, ip ก็สามารถทำได้ดังนี้ </p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"c1\">//interface service</span>\n<span class=\"p\">.</span><span class=\"nx\">client</span><span class=\"p\">({</span> <span class=\"na\">port</span><span class=\"p\">:</span> <span class=\"mi\">8080</span><span class=\"p\">,</span> <span class=\"na\">host</span><span class=\"p\">:</span> <span class=\"s1\">'192.168.0.2'</span><span class=\"p\">,</span><span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'http'</span> <span class=\"p\">})</span>\n<span class=\"c1\">//hello service</span>\n<span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">({</span> <span class=\"na\">port</span><span class=\"p\">:</span> <span class=\"mi\">8080</span><span class=\"p\">,</span> <span class=\"na\">host</span><span class=\"p\">:</span> <span class=\"s1\">'192.168.0.2'</span><span class=\"p\">,</span><span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'http'</span> <span class=\"p\">})</span></code></pre></figure>\n\n<p>นอกจากนี้ seneca.js ยังมีลูกเล่น และ plugin อีกเยอะแยะมากมายบรรยายไม่หมดเลยนะครับโดยสามารถเข้าไปดูเพิ่มเติมได้ที่ <a href=\"http://senecajs.org/\" target=\"_blank\">http://senecajs.org/</a></p>\n<p>\n<h2 class=\"section-heading\">Conclusion</h2>\nจากที่ลองใช้งานดู seneca.js เป็นเครื่องมือที่สามารถประยุกต์ใช้งานได้หลากหลายมากๆ แล้วแต่ว่าจะเอาไปทำอะไร ไม่ว่าเป็น healthcheck, log system, แชร์ config, แชร์ library ระหว่าง service, ส่ง message ไปหา service อื่น, etc. เรียกว่าของมันต้องมี เชื่อผมเถอะแล้วชีิวิตจะง่ายขึ้น! เหมือนเดิมครับตัวอย่าง code สามารถดูได้ <a href=\"https://github.com/noob-studio/seneca-example\" target=\"_blank\">ที่นี่</a> ถ้าชอบก็อย่าลืมกดไลค์กดแชร์ด้วยนะครับบ จุ๊บปาก &lt;3\n</p>\n",
      "date_published": "Thu, 18 Jan 2018 17:11:00 +0700"
      },
    
    {
      "id": "http://localhost:4000/2017/12/04/loopback-nodejs-framework/",
      "url": "http://localhost:4000/2017/12/04/loopback-nodejs-framework/",
      "title": "เขียน RESTful API ใน Node.js แบบ 'โคตรไว' ด้วย Loopback",
      "image": "img/loopback/cover.jpg",
      "content_html": "<p>เนื่องจากผมได้มีโอกาศไปรับงานนึงเกี่ยวกับการจัดการ Stock สินค้าซึ่งจาก Scale งานเนี่ยน่าจะใช้เวลาพัฒนาประมาณ 2 อาทิตย์แต่ลูกค้าแบบว่าเร่งมากบอกน้องพี่ขอ 7 วันได้ไหม!! แม่เจ้าาาา รีบไปไหนเนี่ยพ่อคู๊ณณ แต่ถือเป็นโชคดีที่ก่อนหน้าที่ทำงานของผมได้ให้ผมทำ research เกี่ยวกับ node.js framework ตัวนึงชื่อว่า <a href=\"http://loopback.io\" target=\"_blank\">loopback</a> ซึ่งหลังจากได้ลองใช้ขอบอกเลยว่ามันดีมากเลยอ่ะแกรร แบบว่าของมันต้องใช้อ่ะแกรร ว่าแล้วเราก็มาลองใช้งานกันเลยเถอะ \n</p>\n<p>\n    loopback คือ Node.js framework สำหรับสร้าง REST API อย่างรวดเร็วพร้อมเครื่องมือสำหรับสร้าง Model พร้อม validation และอื่นๆ อีกมากมายอย่างครบวงจรเรียกได้ว่าช่วยประหยัดเวลาในการพัฒนาเป็นอย่างมาก โดย ขั้นตอนการใช้ loopback เบื้องต้นมีดังนี้\n</p>\n<h2 class=\"section-heading\">Setup</h2>\n<p>สำหรับเริ่มใช้งานก็แบบชิลๆ เปิด terminal ขึ้นมา และพิมพ์คำสั่งดังนี้</p>\n<pre>\nnpm install -g loopback-cli\nlb\n</pre>\n<p>เมื่อพิมพ์คำสั่งตามนี้จะปรากฏหน้าต่างให้ setup ข้อมูล api ดังนี้</p>\n<pre>\nWhat's the name of your application?  hello-loopback (ชื่อของ api)\nEnter name of the directory to contain the project: hello-loopback (ไฟล์ต่างๆไว้ในโฟรเดอร์ชื่ออะไรถ้าไม่ใส่จะใส่ในไดเร็กทอรี่เดียวกับชื่อ  api)\nWhich version of LoopBack would you like to use? เวอร์ชันของ loopback ในที่นี้เลือกเวอร์ชัน 3.x\nWhat kind of application do you have in mind? เลือกค่าพื้นฐานของ api ในที่นี้เลือก empty-server\n</pre>\n<p><img src=\"/img/loopback/setup.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<p>เมื่อใส่รายละเอียดต่างๆ เสร็จแล้ว loopback จะทำสร้างไฟล์ต่างๆ ตามที่เรา setup ไว้เป็นอันเสร็จขั้นตอนแรก</p>\n\n<h2 class=\"section-heading\">Create Model</h2>\n<p>เมื่อเรา setup เสร็จแล้วเราก็จะมาสร้าง model แรกกันโดยมีขั้นตอนดังนี้</p>\n<pre>\ncd hello-loopback\nlb model\n</pre>\n<p>เมื่อเราพิมพ์คำสั่ง lb model บรรทัดแรกจะขึ้นตัวแดงๆ มาไม่ต้องตกใจบรรทัดต่อมามันจะถามว่า</p>\n<pre>\nEnter the model name: blog (ให้เราใส่ชื่อ model ของเรา)\nSelect model's base class: PersistedModel (เลือกประเภทของ model ที่เราจะสร้าง)\nExpose blog via the REST API? Y (model นี้เป็น REST api หรือเปล่า)\nCustom plural form: /blog (path ของ model นี้)\nCommon model or server only? common (model นี้จะเอาไว้ที่ไหนในไดเรคทอรี่ server หรือ common)\n</pre>\n<p><img src=\"/img/loopback/model.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<p>เมื่อ setup model เสร็จมันก็จะให้เราใส่ property ของ model โดยมีรายละเอียดดังนี้</p>\n<pre>\nProperty name: name (ชื่อของ property)\nProperty type: string (ประเภทของ property)\nRequired? Y (จำเป็นต้องใส่หรือไม่)\nDefault value[leave blank for none]: (ค่า default ของ property นี้)\n</pre>\n<p><img src=\"/img/loopback/property.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<p>เมื่อเราใส่ property เสร็จมันก็จะวนถามใหม่เรื่อยๆ ให้เราใส่เรื่อยๆ จนกว่าจะพอใจเมื่อพอใจแล้วตรง Property name: ให้เว้นว่างไว้มันก็จะออกจากการสร้าง model</p>\n<p>เมื่อเราเข้าไปดูในไดเรคทอรี่ common/models ก็จะเห็นไฟล์ชื่อ model ของเรา 2 ไฟล์คือ .js (จะอธิบายต่อไป) และ .json เก็บข้อมูลต่างๆ ของ model เรา</p>\n\n<h2 class=\"section-heading\">Connect database</h2>\n<p>เมื่อเราสร้าง model เสร็จแล้วสิ่งที่เราต้องทำต่อมาคือเชื่อมต่อกับฐานข้อมูลซึ่งสามารถทำได้โดยพิมพ์คำสั่ง </p>\n<pre>\nlb datasource\n</pre>\n<p>หลังจากนั้นมันจะขึ้นคำถามดังนี้</p>\n<pre>\nEnter the datasource name: mysql (ให้ใส่ชื่อ datasource อะไรก็ได้)\nSelect the connector for mysql: MySQL (ให้เลือกฐานข้อมูลในที่นี้ใช้ MySQL)\nConnection String url to override other settings (eg: mysql://user:pass@host/db): mysql://root@127.0.0.1/test (ใส่รายละเอียดการเชื่อมต่อไม่ต้องใส่ก็ได้)\nhost: 127.0.0.1 (ใส่ host ของฐานข้อมูล)\nport: 3306 (ใส่ port สำหรับเชื่อมต่อฐานข้อมูล)\nuser: root (ใส่ username)\npassword: (ใส่ password)\ndatabase: test (ใส่ฐานข้อมูลที่ต้องเชื่อมต่อ)\nInstall loopback-connector-mysql@^2.2: Y (ต้องการติดตั้ง loopback-connector-mysql หรือไม่)\n</pre>\n<p><img src=\"/img/loopback/datasource.png\" alt=\"สอนใช้งาน loopback\" />\nหลังจากนั้นไปที่ไฟล์ server/model-config.js แก้ตรง</p>\n<pre>\n...\ndatasource: null\n...\n</pre>\n\n<p>เป็น</p>\n<pre>\n...\ndatasource: ‘mysql’ (ชื่อของ datasource ที่เราสร้างขึ้น)\n...\n</pre>\n<p>เพียงเท่านี้ก็เสร็จเรียบร้อยในขั้นตอนการเชื่อมต่อกับฐานข้อมูลแล้วต่อไปเราก็จะมาสร้างตารางจาก model ของเรากัน</p>\n<h2 class=\"section-heading\">Automigrate</h2>\n<p>เมื่อเรามี model แล้ว เชื่อมต่อฐานข้อมูลแล้ว ต่อมาเราก็จะทำการสร้างตารางสำหรับ model ของเรากันโดยเปิด editor ขึ้นมาแล้วสร้างไฟล์ชื่ออะไรก็ได้ใส่ไว้ในไดเรคทอรี่ server/boot โดยใส่ code ดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\t<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">dataSources</span><span class=\"p\">.</span><span class=\"nx\">mysql</span><span class=\"p\">.</span><span class=\"nx\">automigrate</span><span class=\"p\">(</span><span class=\"s1\">'blog'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"nx\">err</span><span class=\"p\">;</span>\n\t\t<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">models</span><span class=\"p\">.</span><span class=\"nx\">blog</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">([{</span>\n\t\t\t<span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'test1'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">author</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">date</span><span class=\"p\">:</span> <span class=\"nb\">Date</span><span class=\"p\">()</span>\n\t\t<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t\t\t<span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'test2'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">author</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">date</span><span class=\"p\">:</span> <span class=\"nb\">Date</span><span class=\"p\">()</span>\n\t\t<span class=\"p\">},</span> <span class=\"p\">{</span>\n\t\t\t<span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'test3'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">author</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">date</span><span class=\"p\">:</span> <span class=\"nb\">Date</span><span class=\"p\">()</span>\n\t\t<span class=\"p\">},</span> <span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">blog</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\t\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"nx\">err</span><span class=\"p\">;</span>\n\t\t\t<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Models created: </span><span class=\"err\">\\</span><span class=\"s1\">n'</span><span class=\"p\">,</span> <span class=\"nx\">blog</span><span class=\"p\">);</span>\n\t\t<span class=\"p\">});</span>\n\t<span class=\"p\">});</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p>code ด้านบนอธิบายได้ดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">dataSources</span><span class=\"p\">.</span><span class=\"nx\">mysql</span><span class=\"p\">.</span><span class=\"nx\">automigrate</span><span class=\"p\">(</span><span class=\"s1\">'blog'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"p\">...</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เป็นฟังชันสำหรับ migrate ฐานข้อมูลของ loopback โดยส่ง parameter เข้าไปสองตัวคือ model ที่ต้องการ migrate และ callback</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">models</span><span class=\"p\">.</span><span class=\"nx\">blog</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">([{</span>\n\t<span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'test1'</span><span class=\"p\">,</span>\n\t<span class=\"na\">author</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span><span class=\"p\">,</span>\n\t<span class=\"na\">date</span><span class=\"p\">:</span> <span class=\"nb\">Date</span><span class=\"p\">()</span>\n<span class=\"p\">},</span>\n        <span class=\"p\">...</span>\n<span class=\"p\">]);</span></code></pre></figure>\n\n<p>คือการเพิ่มข้อมูลใส่ในตารางที่เราทำการ migrate <span style=\"color:red\">** มีข้อควรระวังคือหากในตารางนั้นมีข้อมูลอยู่แล้วจะถูกเขียนทับ **</span></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"p\">...</span>\n<span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">blog</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"nx\">err</span><span class=\"p\">;</span>\n\t<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Models created: </span><span class=\"err\">\\</span><span class=\"s1\">n'</span><span class=\"p\">,</span> <span class=\"nx\">blog</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"p\">...</span></code></pre></figure>\n\n<p>คือการ handle callback เมื่อทำการ migrate สำเร็จ หลังจากนั้นเมื่อเราเตรียมทุกอย่างพร้อมเราจึงเริ่มทำรัน REST api ของเราโดยพิมพ์คำสั่ง</p>\n<pre>\nnode .\n</pre>\n<p>เมื่อเข้าไปดูในฐานข้อมูลก็จะพบตารางชื่อตาม model ของเราโดยที่มีข้อมูลตามที่เรา insert เข้าไปดังภาพ</p>\n<p><img src=\"/img/loopback/database1.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<h2 class=\"section-heading\">ทดลองใช้ API</h2>\n<p>หลังจากที่เรารัน REST api แล้วให้ลองเปิด browser เข้าไปที่ path 127.0.0.1:3000/explorer จะพบหน้าตาสำหรับทดลอง api ดังภาพ</p>\n<p><img src=\"/img/loopback/explorer.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<p>หากเราต้องเพิ่มข้อมูลเข้าสู่ตารางให้เลือกที่ post ใส่ข้อมูลลงไป และกดที่ try out ดังภาพ</p>\n<p><img src=\"/img/loopback/post.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<p>หลังจากนั้นเมื่อเราเข้าไปดูที่ฐานข้อมูลก็จะเห็นข้อมูลที่เราเพิ่มไปเมื่อกี้เข้ามา</p>\n<p><img src=\"/img/loopback/database.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<p>หรือหากลองเปิด Browser แล้วเข้าไปที่ http://localhost:3000/api/blog ก็จะเห็นข้อมูลในฐานข้อมูลเราดังภาพเพียงแค่นี้เราก็สร้าง RESTful API สำหรับ CRUD เสร็จแล้วนะครับต่อไปเราจะมาทำ Custom API กัน</p>\n<p><img src=\"/img/loopback/browser_open.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<h2 class=\"section-heading\">Custom API</h2>\n<p>เพราะในชีวิตจริง API เราของไม่ได้มีแต่ CRUD ต้องฟังชันการทำงานอื่นๆ ซึ่งใน loopback เนี่ยเราสามารถทำ API เอกได้ง่ายๆดังนี้เปิดไฟล์ Model ของเราขึ้นมาซึ่งไฟล์ Model ของเราจะอยู่ที่ common/models/ชื่อโมเดล.js ซึ่งพอเราเปิดขึ้นมาก็จะเป็นไฟล์ไม่ได้ทำๆ (ไฟล์เปล่าๆ) ที่มีข้อมูลหล่อมแหล่มดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"s1\">'use strict'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">Blog</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n<span class=\"p\">};</span></code></pre></figure>\n\n<p>ให้เราสอดใส่ Code เข้าไปดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">Blog</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n\t<span class=\"nx\">Blog</span><span class=\"p\">.</span><span class=\"nx\">hello</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">msg</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"s2\">\"Hello \"</span><span class=\"o\">+</span><span class=\"nx\">msg</span><span class=\"p\">)</span>\n\t<span class=\"p\">}</span>\n\t<span class=\"nx\">Blog</span><span class=\"p\">.</span><span class=\"nx\">remoteMethod</span><span class=\"p\">(</span>\n\t\t<span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n\t\t\t<span class=\"na\">http</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t\t\t\t<span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s1\">'/hello'</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"na\">verb</span><span class=\"p\">:</span> <span class=\"s1\">'get'</span>\n\t\t\t<span class=\"p\">},</span>\n\t\t\t<span class=\"na\">accepts</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t\t\t\t<span class=\"na\">arg</span><span class=\"p\">:</span> <span class=\"s1\">'msg'</span><span class=\"p\">,</span> \n\t\t\t\t<span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n\t\t\t<span class=\"p\">},</span>\n\t\t\t<span class=\"na\">returns</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t\t\t\t<span class=\"na\">arg</span><span class=\"p\">:</span> <span class=\"s1\">'word'</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">}</span>\n\t<span class=\"p\">);</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p>Code ข้างบนมีการทำงานคือเมื่อมีคน route ผ่าน method get มาที่ http://localhost:3000/api/blog/hello พร้อม parameter ชื่อ msg ก็จะตอบกลับดังรูปตัวอย่าง</p>\n<p><img src=\"/img/loopback/example.png\" alt=\"สอนใช้งาน loopback\" /></p>\n<p>โดย Code ข้างบนมีการทำงานดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">Blog</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"p\">...</span>\n<span class=\"p\">};</span></code></pre></figure>\n\n<p>export module ของเราส่วน Parameter Blog ที่เข้ามาก็คือ model ของเราพร้อมฟังก์ชันเสริมต่างๆ นาๆที่ loopback เพิ่มมาให้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">Blog</span><span class=\"p\">.</span><span class=\"nx\">hello</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">msg</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">){</span>\n\t<span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"nx\">msg</span><span class=\"p\">)</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>เพิ่มฟังชันชื่อ hello เข้าไปใน model Blog โดยที่ parameter ที่ส่งเข้าไปตัวแรก msg คือค่าที่รับมาจาก request และ callback นี่ loopback ส่งเข้ามาให้เราสำหรับส่งข้อมูลกลับไปเมื่อเราทำงานเสร็จแล้ว จะสังเกตุเห็นว่าใน loopback รับ parameter 2 ตัว ตัวแรกที่เป็น null คือerr ในกรณีที่มี err ตัวที่สองคือค่าที่เราจะ response ออกไป</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">Blog</span><span class=\"p\">.</span><span class=\"nx\">remoteMethod</span><span class=\"p\">(</span>\n    <span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"na\">http</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s1\">'/hello'</span><span class=\"p\">,</span>\n            <span class=\"na\">verb</span><span class=\"p\">:</span> <span class=\"s1\">'get'</span>\n        <span class=\"p\">},</span>\n        <span class=\"na\">accepts</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">arg</span><span class=\"p\">:</span> <span class=\"s1\">'msg'</span><span class=\"p\">,</span> \n            <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n        <span class=\"p\">},</span>\n        <span class=\"na\">returns</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">arg</span><span class=\"p\">:</span> <span class=\"s1\">'word'</span><span class=\"p\">,</span>\n            <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">);</span></code></pre></figure>\n\n<p>คือการตั้งค่า Custom API ของเรา </p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n<span class=\"p\">...</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>คือบอกว่าตั้งค่าของฟังก์ชันไหน</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"p\">...</span>\n<span class=\"nx\">http</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"nl\">path</span><span class=\"p\">:</span> <span class=\"s1\">'/hello'</span><span class=\"p\">,</span>\n\t<span class=\"nx\">verb</span><span class=\"p\">:</span> <span class=\"s1\">'get'</span>\n<span class=\"p\">},</span>\n<span class=\"p\">...</span></code></pre></figure>\n\n<p>คือการเซ็ทพาท และ method ที่เข้ามา</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"p\">...</span>\n<span class=\"nx\">accepts</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"nl\">arg</span><span class=\"p\">:</span> <span class=\"s1\">'msg'</span><span class=\"p\">,</span> \n\t<span class=\"nx\">type</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n<span class=\"p\">},</span>\n<span class=\"p\">...</span></code></pre></figure>\n\n<p>คือการเซ็ท parameter ที่จะเข้ามา arg คือชื่อ type คือประเภท</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"p\">...</span>\n<span class=\"nx\">returns</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\t<span class=\"nl\">arg</span><span class=\"p\">:</span> <span class=\"s1\">'word'</span><span class=\"p\">,</span>\n\t<span class=\"nx\">type</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span>\n<span class=\"p\">}</span>\n<span class=\"p\">...</span></code></pre></figure>\n\n<p>คือการเซ็ทข้อมูล response ที่จะออกไปก็เหมือนเดิมครับ arg คือชื่อ และ type คือประเภท</p>\n<p>เป็นอันเสร็จเรียบร้อยแล้วนะครับสำหรับการใช้ loopback สร้าง RESTful API เบื้องต้นในตอนต่อไป (ถ้าไม่ลืม) จะมาสอนใช้งาน loopback ร่วมกับ Angular 2 กันนะจ๊ะจุ๊ปปาก &lt;3 สามารถดูตัวอย่าง source code ได้ <a href=\"https://github.com/freeweed/loopback-example\" target=\"_blank\">ที่นี่</a> นะจ๊ะ</p>\n",
      "date_published": "Mon, 04 Dec 2017 13:52:00 +0700"
      },
    
    {
      "id": "http://localhost:4000/2017/11/29/knex-nodejs-orm/",
      "url": "http://localhost:4000/2017/11/29/knex-nodejs-orm/",
      "title": "วิธีใช้ knex.js จัดการฐานข้อมูล MySQL ใน Node.js",
      "image": "img/node-orm/cover.jpg",
      "content_html": "<p>ด้วยในยุคนี้นะครับเป็นยุคที่ Javascript ครองเมืองหันไปทางไหนก็มีแต่ Javascript เต็มไปหมดเลยครับไม่ว่าจะ React, Angular, Vue, Node, MEAN โอ้ยยเยอะแยะไปหมด หลายๆที่ก็เริ่มเปลี่ยนฝั่ง Back จาก PHP มาเป็น Node.js และฝั่ง Front ก็เริ่มเป็น Angular, Vue, React อะไรก็ว่า แต่เขียนโค้ดใหม่ที่ว่ายากแล้วการต้อง migration ข้อมูลจาก MySQL ไปเป็นฐานข้อมูลแบบ NoSQL สถาปัตยกรรมมันเข้ากันก็ลำบากเหลือเกิน ครั้นจะเขียน SQL คิวรี่เหมือนเดิมก็ขัดใจ๋ขัดใจ การเขียนโปรแกรมแบบ ORM (Object Relational Mapping) จึงเกิดขึ้น การเขียนโปรแกรมแบบ ORM พูดง่ายๆก็คือการแปลงข้อมูลที่ไม่เป็น Object มาอยู่ในรูป Object สำหรับใช้ภาษาโปรแกรมที่เป็น Object Oriented ซึ่งในบทความนี้เราจะใช้ ORM Tool ชื่อว่า\n<a herf=\"http://knexjs.org/\" target=\"_blank\">knexjs.org</a> นั่นเอง</p>\n<blockquote>ORM คือการแปลงข้อมูลที่ไม่เป็น Object มาอยู่ในรูป Object สำหรับใช้ภาษาโปรแกรมที่เป็น Object Oriented</blockquote>\n<p style=\"color:red;\">หมายเหตุในบทความนี้ใช้ async / await เยอะมากเพื่อความเข้าใจกรุณาไปศึกษาเรื่องนี้มาก่อนนะจ๊ะ</p>\n<h2 class=\"section-heading\">What is knex.js</h2>\n<p>knex.js คือเครื่องมือที่ช่วยให้เราเขียน node.js สามารถจัดการกับฐานข้อมูลในรูปแบบ Object ได้ (ORM) ทำให้เราเขียนโปรแกรมได้ง่ายขึ้นเพราะไม่ต้องมาคอยเขียนคำสั่ง SQL และแปลงข้อมูลที่ได้มาให้เป็น Object ของเราอีกทีนึงให้วุ่นวาย ขั้นตอนการใช้งานมีดังนี้</p>\n<h2 class=\"section-heading\">Setup</h2>\n<p>เอาละครับเรารู้จัก ORM กับ knex.js กันคร่าวๆ แล้วเรามาลงมือทำกันเลยดีกว่าเปิด terminal ขึ้นมาแล้วพิมพ์ตามนี้</p>\n<pre>\nmkdir test-knex \ncd test-knex\nnpm init\nnpm install -–save knex mysql\n</pre>\n<p>ขั้นตอนแรกสร้างโฟลเดอร์ขึ้นมาแล้วติดตั้ง Module ต่างๆที่จำเป็นดังนี้ knex และ mysql</p>\n<h2 class=\"section-heading\">Connect Database</h2>\n<p>ต่อไปเรามาสร้าง CRUD จาก knex กันนะครับโดยขั้นตอนแรกให้เพิ่มทำการ connect ฐานข้อมูลก่อนดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span> <span class=\"o\">=</span> <span class=\"nx\">knex</span><span class=\"p\">({</span>\n    <span class=\"na\">client</span><span class=\"p\">:</span> <span class=\"s1\">'mysql'</span><span class=\"p\">,</span>\n    <span class=\"na\">connection</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">host</span> <span class=\"p\">:</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span>\n        <span class=\"na\">user</span> <span class=\"p\">:</span> <span class=\"s1\">'root'</span><span class=\"p\">,</span>\n        <span class=\"na\">password</span> <span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n        <span class=\"na\">database</span> <span class=\"p\">:</span> <span class=\"s1\">'knex'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>บรรทัดนี้เป็นการเชื่อมต่อกับฐานข้อมูลนะครับโดยใส่รายละเอียดต่างๆ เข้าไป client คือบอกว่าเราใช้ฐานข้อมูลประเภทอะไรส่วน connection ก็คือรายละเอียดทั่วๆไปของฐานข้อมูล</p>\n<h2 class=\"section-heading\">Do table Job</h2>\n<p>ก่อนที่เราจะสร้าง CRUD ได้ เราจำเป็นต้องมีตารางสำหรับทดสอบก่อนโดยเราสามารถจัดการกับตารางได้โดยใช้คำสั่งต่อไปนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">.</span><span class=\"nx\">schema</span><span class=\"p\">.</span><span class=\"nx\">dropTableIfExists</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">);</span>\n<span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">.</span><span class=\"nx\">schema</span><span class=\"p\">.</span><span class=\"nx\">createTableIfNotExists</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tbl</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">tbl</span><span class=\"p\">.</span><span class=\"nx\">increments</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">).</span><span class=\"nx\">primary</span><span class=\"p\">().</span><span class=\"nx\">unique</span><span class=\"p\">().</span><span class=\"nx\">index</span><span class=\"p\">();</span>\n    <span class=\"nx\">tbl</span><span class=\"p\">.</span><span class=\"nx\">string</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">);</span>\n    <span class=\"nx\">tbl</span><span class=\"p\">.</span><span class=\"nx\">string</span><span class=\"p\">(</span><span class=\"s1\">'writer'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>คำสั่งข้างล่างนี้</p>\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">.</span><span class=\"nx\">schema</span><span class=\"p\">.</span><span class=\"nx\">dropTableIfExists</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">);</span></code></pre></figure>\n<p>คือการ Drop ตารางถ้าหากว่ามีตารางนี้แล้ว เทียบได้กับ คำสั่ง</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"> <span class=\"k\">DROP</span> <span class=\"k\">TABLE</span> <span class=\"n\">IF</span> <span class=\"n\">EXIST</span> <span class=\"err\">‘</span><span class=\"n\">Blog</span><span class=\"err\">’</span></code></pre></figure>\n<p>ใน MySQLและ </p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">.</span><span class=\"nx\">schema</span><span class=\"p\">.</span><span class=\"nx\">createTableIfNotExists</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">tbl</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\t<span class=\"p\">...</span>\n<span class=\"p\">});</span> </code></pre></figure>\n\n<p>คือคำสั่งสำหรับตารางถ้ายังไม่มี</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">tbl</span><span class=\"p\">.</span><span class=\"nx\">increments</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">).</span><span class=\"nx\">primary</span><span class=\"p\">().</span><span class=\"nx\">unique</span><span class=\"p\">().</span><span class=\"nx\">index</span><span class=\"p\">();</span>\n<span class=\"nx\">tbl</span><span class=\"p\">.</span><span class=\"nx\">string</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">);</span>\n<span class=\"nx\">tbl</span><span class=\"p\">.</span><span class=\"nx\">string</span><span class=\"p\">(</span><span class=\"s1\">'writer'</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>คือการ set structure ให้ตาราง Blog โดยเทียบได้กับคำสั่ง</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">IF</span> <span class=\"k\">NOT</span> <span class=\"k\">EXISTS</span> <span class=\"err\">‘</span><span class=\"n\">Blog</span><span class=\"err\">’</span> <span class=\"p\">(</span><span class=\"err\">‘</span><span class=\"n\">id</span><span class=\"err\">’</span> <span class=\"n\">INT</span> <span class=\"n\">UNSIGNED</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span> <span class=\"n\">AUTO_INCREMENT</span> <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span><span class=\"p\">,</span>\n<span class=\"err\">‘</span><span class=\"n\">name</span><span class=\"err\">’</span> <span class=\"n\">VARCHAR</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"err\">‘</span><span class=\"n\">writer</span><span class=\"err\">’</span> <span class=\"n\">VARCHAR</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">));</span></code></pre></figure>\n\n<p>ซึ่ง data type ใน knex มีครอบคลุมทุกประเภทใน MySQL โดยสามารถดูเพ่ิมเติมได้ที่ <a herf=\"http://knexjs.org/#Schema-Building\" target=\"_blank\">knexjs.org</a></p>\n<h2 class=\"section-heading\">CREATE</h2>\n<p>\nต่อมาเรามาเริ่ม insert ข้อมูลชุดแรกลงฐานข้อมูลกัน โดยการ insert ข้อมูลของ knex มี 2 แบบคือ แบบธรรมดา และ แบบ Batch สำหรับ insert ข้อมูลจำนวนมาก\n\tตัวอย่างคำสั่ง insert ข้อมูลธรรมดา\n    \n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">).</span><span class=\"nx\">insert</span><span class=\"p\">({</span><span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'lonely insert'</span><span class=\"p\">,</span> <span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'lonely man'</span><span class=\"p\">});</span></code></pre></figure>\n\n\tเทียบได้กับ\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">Blog</span> <span class=\"p\">(</span><span class=\"err\">‘</span><span class=\"n\">name</span><span class=\"err\">’</span><span class=\"p\">,</span> <span class=\"err\">‘</span><span class=\"n\">writer</span><span class=\"err\">’</span><span class=\"p\">)</span> <span class=\"k\">VALUES</span> <span class=\"p\">(</span><span class=\"err\">‘</span><span class=\"n\">lonely</span> <span class=\"k\">insert</span><span class=\"err\">’</span><span class=\"p\">,</span><span class=\"err\">’</span><span class=\"n\">lonely</span> <span class=\"n\">man</span><span class=\"err\">’</span><span class=\"p\">);</span></code></pre></figure>\n\n\tหาต้องการ insert ID ให้เอาตัวแปลไปรับได้เลย เช่น \n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">let</span> <span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">).</span><span class=\"nx\">insert</span><span class=\"p\">({</span><span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'lonely insert'</span><span class=\"p\">,</span> <span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'lonely man'</span><span class=\"p\">});</span></code></pre></figure>\n\n\tตัวอย่างคำสั่ง insert ข้อมูลแบบ Batch สำหรับ insert ข้อมูลจำนวนมาก\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">.</span><span class=\"nx\">batchInsert</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">,[{</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'hello world'</span><span class=\"p\">,</span>\n        <span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span>\n    <span class=\"p\">},{</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'hello awesome'</span><span class=\"p\">,</span>\n        <span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'nun'</span>\n    <span class=\"p\">},{</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'this is awesome lib'</span><span class=\"p\">,</span>\n        <span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span>\n<span class=\"p\">}]);</span></code></pre></figure>\n\n\tเทียบได้กับ\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">Blog</span> <span class=\"p\">(</span><span class=\"err\">‘</span><span class=\"n\">name</span><span class=\"err\">’</span><span class=\"p\">,</span> <span class=\"err\">‘</span><span class=\"n\">writer</span><span class=\"err\">’</span><span class=\"p\">)</span> <span class=\"k\">VALUES</span> <span class=\"p\">(</span><span class=\"err\">‘</span><span class=\"n\">hello</span> <span class=\"n\">world</span><span class=\"err\">’</span><span class=\"p\">,</span><span class=\"err\">’</span><span class=\"n\">mike</span><span class=\"err\">’</span><span class=\"p\">),(</span><span class=\"err\">‘</span><span class=\"n\">hello</span> <span class=\"n\">awesome</span><span class=\"err\">’</span><span class=\"p\">,</span> <span class=\"err\">’</span><span class=\"n\">nun</span><span class=\"err\">’</span><span class=\"p\">),(</span><span class=\"err\">‘</span><span class=\"n\">this</span> <span class=\"k\">is</span> <span class=\"n\">awesome</span> <span class=\"n\">lib</span><span class=\"err\">’</span><span class=\"p\">,</span> <span class=\"err\">‘</span><span class=\"n\">mike</span><span class=\"err\">’</span><span class=\"p\">);</span></code></pre></figure>\n\n</p>\n<h2 class=\"section-heading\">READ</h2>\n<p>\n\tเมื่อเรา insert  ข้อมูลลงฐานข้อมูลเสร็จแล้วต่อมาเราจะทำการอ่านข้อมูลจากฐานข้อมูลซึ่งเราสามารถทำได้โดยใช้คำสั่งดังนี้\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">let</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">).</span><span class=\"nx\">select</span><span class=\"p\">();</span></code></pre></figure>\n\n\tเทียบได้กับ\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><span class=\"k\">SELECT</span> <span class=\"o\">*</span> <span class=\"k\">FROM</span> <span class=\"n\">Blog</span></code></pre></figure>\n\n\tหรือหากต้องการใส่เงื่อนไขในการคิวรี่ข้อมูลก็สามารถทำได้ดังนี้\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">let</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">).</span><span class=\"nx\">where</span><span class=\"p\">({</span><span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span><span class=\"p\">}).</span><span class=\"nx\">select</span><span class=\"p\">();</span></code></pre></figure>\n\n\tเทียบได้กับ\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><span class=\"k\">SELECT</span> <span class=\"o\">*</span> <span class=\"k\">FROM</span> <span class=\"n\">Blog</span> <span class=\"k\">WHERE</span> <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"err\">‘</span><span class=\"n\">mike</span><span class=\"err\">’</span></code></pre></figure>\n\n\tนอกจากนี้คำสั่งที่ใช้การคิวรี่อื่นๆ เช่น JOIN, COUNT, SUM, GROUP BY และอื่นๆ knex ก็รองรับนะครับโดยสามารถดูตัวอย่างการใช้งานได้ที่นี่นะครับ \n    <a herf=\"http://knexjs.org/\" target=\"_blank\">knexjs.org</a>\n</p>\n<h2 class=\"section-heading\">UPDATE</h2>\n<p>\nREAD เสร็จแล้วต่อมาก็คือ UPDATE ซึ่งใน การ UPDATE ก็สามารถทำได้ดังนี้\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">).</span><span class=\"nx\">where</span><span class=\"p\">({</span><span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'lonely man'</span><span class=\"p\">}).</span><span class=\"nx\">update</span><span class=\"p\">({</span><span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"s1\">'not alone insert'</span><span class=\"p\">});</span></code></pre></figure>\n\n เทียบได้กับ\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><span class=\"k\">UPDATE</span> <span class=\"n\">Blog</span> <span class=\"k\">SET</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'not alone insert'</span> <span class=\"k\">WHERE</span> <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"s1\">'lonely man'</span></code></pre></figure>\n\n<p>\n<h2 class=\"section-heading\">DELETE</h2>\n<p>\n\tสุดท้ายแล้วนะครับเมื่อเรา CREATE READ UPDATE จนหนำใจแล้วพอเราเริ่มเบื่อเราก็ลบมันทิ้งโดยใช้คำสั่งดังนี้\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">knex</span><span class=\"p\">(</span><span class=\"s1\">'Blog'</span><span class=\"p\">).</span><span class=\"nx\">where</span><span class=\"p\">({</span><span class=\"na\">writer</span><span class=\"p\">:</span> <span class=\"s1\">'mike'</span><span class=\"p\">}).</span><span class=\"nx\">del</span><span class=\"p\">();</span></code></pre></figure>\n\nเทียบได้กับ\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><span class=\"k\">DELETE</span> <span class=\"k\">from</span> <span class=\"n\">Blog</span> <span class=\"k\">WHERE</span> <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"s1\">'mike'</span></code></pre></figure>\n\n\nหมดแล้วครับสำหรับบทความนี้ก็สั้นหน่อยนะครับเพราะแอบเขียนในที่ทำงานแหะๆ เหมือนเดิมครับ source code อยู่บน Github ตามลิงค์นี้นะจ๊ะ\n<a href=\"https://github.com/freeweed/knex-example\" target=\"_blank\">Github</a>\n</p>\n</p></p>\n",
      "date_published": "Wed, 29 Nov 2017 10:38:00 +0700"
      },
    
    {
      "id": "http://localhost:4000/2017/03/28/ionic2-notification/",
      "url": "http://localhost:4000/2017/03/28/ionic2-notification/",
      "title": "วิธีทำ Notification(แจ้งเตือน) ให้ Ionic2 ด้วย Firebase และ Node.js",
      "image": "img/ionic-notification/cover.jpg",
      "content_html": "<p>สวัสดีครับหลังจากคราวก่อนได้เขียนวิธีสร้าง <a href=\"/2017/03/18/ionic-chat/\">แอพพลิเคชันแชทแบบง่ายๆ ด้วย Ionic2 Node.js</a> ก็มีคนบอกว่าอยากให้เขียนวิธีการแจ้งเตือนให้มือถือและผมก็คิดเรื่องจะเขียนไม่ออกด้วยครับช่วงนี้เพราะฉะนั้นวันนี้ีเราทำแจ้งเตือนกันเถอะ 555 โดยแจ้งเตือนเนี่ยมี 2 แบบคือแบบ Local Notification และไม่ Local โดยจะแตกต่างกันดังนี้</p>\n<ul>\n<li>Local Notification (เกมเตือนให้รับของประจำวัน) ไม่จำเป็นต้องมี Server เป็นการตั้งค่าให้แจ้งเตือนตามเวลาที่ตั้งไว้ข้อดีคือง่ายแต่มีข้อเสียคือข้อมูลจะตายตัวไม่มีการเปลี่ยนแปลง (ไว้บทความถัดไปนะจ๊ะ)</li>\n<li>ไม่ Local (facebook, line) จำเป็นต้องมี Server เพื่อส่งแจ้งเตือนให้แอพพลิเคชันมีข้อดีคือสามารถแจ้งเตือนเมื่อไหร่ก็ได้ข้อมูลสามารถยืดหยุ่นตาม Server ส่งมาให้ (สอนในบทความนี้)</li>\n</ul>\n<blockquote>แจ้งเตือนที่มีข้อมูลแบบไม่ตายตัว(app แชททั่วไป) ต้องมี server แจ้งเตือนแบบตายตัว(เช่น เกมเตือนให้รับของประจำวัน) ไม่จำเป็นต้องมี server</blockquote>\n<h2 class=\"section-heading\">Required &amp; Install</h2>\n<p>สิ่งที่จะใช้ในการทำแจ้งเตือนของบทความนี้มีดังนี้</p>\n<ul>\n    <li>Node.js เวอร์ชันล่าสุด</li>\n    <li>gmail (คิดว่าทุกคนคงจะมีนะจ๊ะ)</li>\n    <li>มือถือ Android (ใช้ทดสอบ)</li>\n    <li>ในการทดสอบโทรศัพท์มือถือและคอมเครื่องที่ใช้เป็น server ต้องต่อเน็ตวงเดียวกันนะจ๊ะ (Wifi อันเดียวกัน)</li>\n</ul>\n\n<h2 class=\"section-heading\">Init Firebase</h2>\n<p>ขั้นแรกให้เราเปิดเว็ปไซด์ <a href=\"https://firebase.google.com/?hl=en\" target=\"_blank\">Firebase</a> ขึ้นมาพร้อม Login ให้เรียบร้อยหากยังไม่มีโปรเจคให้สร้างโปรเจคด้วยนะครับ</p>\n<p><img src=\"/img/ionic-notification/img01.png\" />\n<span class=\"caption text-muted\">สร้างโปรเจคขึ้นมาใน Firebase</span></p>\n<p>หลังจากนั้นกดเข้ามาใน Project และไปที่ Project Settings &gt; Cloud Messaging จะเห็นหน้าจอแบบภาพข้างล่างนะครับให้จดเลข Server Key และ Sender ID ไว้นะจ๊ะ</p>\n<p><img src=\"/img/ionic-notification/img02.png\" />\n<span class=\"caption text-muted\">จด Server Key กับ Sender ID ไว้ให้ดีนะจ๊ะต้องใช้</span></p>\n<ul>\n    <li>Server Key ใช้สำหรับใส่ใน Server ของเรา</li>\n    <li>Sender ID ใช้สำหรับใส่ในแอพของเรา</li>\n</ul>\n<h2 class=\"section-heading\">Start Server</h2>\n<p>เมื่อเราตั้งค่า Firebase เสร็จแล้วต่อไปเรามาเริ่มสร้าง Server สำหรับส่งแจ้งเตือนกันนะจ๊ะ</p>\n<pre>\n    mkdir ionic-notification\n    cd ionic-notification\n    npm init\n    npm install node-gcm express --save\n</pre>\n<p>node-gcm ใช้สำหรับส่งแจ้งเตือนนะครับส่วน express ใช้เป็น server</p>\n<p><b>index.js</b></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'express'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">gcm</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'node-gcm'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">bodyParser</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'body-parser'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span> <span class=\"nx\">bodyParser</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">()</span> <span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">server_key</span> <span class=\"o\">=</span> <span class=\"s1\">'XXXXXXXXXXX'</span><span class=\"p\">;</span> <span class=\"c1\">// server key</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">send</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">token</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">retry_times</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">sender</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">gcm</span><span class=\"p\">.</span><span class=\"nx\">Sender</span><span class=\"p\">(</span><span class=\"nx\">server_key</span><span class=\"p\">);</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">message</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">gcm</span><span class=\"p\">.</span><span class=\"nx\">Message</span><span class=\"p\">();</span>\n  <span class=\"nx\">message</span><span class=\"p\">.</span><span class=\"nx\">addData</span><span class=\"p\">(</span><span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'Hello Lady~!'</span><span class=\"p\">);</span>\n  <span class=\"nx\">message</span><span class=\"p\">.</span><span class=\"nx\">addData</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"s1\">'Hello Beutiful Girl!'</span><span class=\"p\">);</span>\n  <span class=\"nx\">sender</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">message</span><span class=\"p\">,</span> <span class=\"nx\">token</span><span class=\"p\">,</span> <span class=\"nx\">retry_times</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'send noti!'</span><span class=\"p\">);</span>\n  <span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'cant send noti T^T'</span><span class=\"p\">);</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"s2\">\"This is basic route\"</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"s1\">'/open'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"cm\">/*insert token to DB*/</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">token</span><span class=\"p\">.</span><span class=\"nx\">registrationId</span><span class=\"p\">;</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">token</span><span class=\"p\">));</span>\n  <span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">token</span><span class=\"p\">);</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/send'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"s1\">'XXXXXXXXXXXXX'</span><span class=\"p\">;</span> <span class=\"c1\">//token</span>\n  <span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">token</span><span class=\"p\">);</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"s2\">\"send notification\"</span><span class=\"p\">);</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">5555</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Program running on port : 5555'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เรียบร้อยครับสั้นดีใช่ไหมครับสำหรับ Code ฝั่ง Server ของเราต่อไปอธิบาย Code นะครับ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'express'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">gcm</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'node-gcm'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">bodyParser</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'body-parser'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span> <span class=\"nx\">bodyParser</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">()</span> <span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">server_key</span> <span class=\"o\">=</span> <span class=\"s1\">'XXXXXXXXXXX'</span><span class=\"p\">;</span> <span class=\"c1\">// server key</span></code></pre></figure>\n\n<p>เรียกใช้งาน Module ที่จำเป็นนะครับ node-cgm ใช้ส่งแจ้งเตือนส่วน bodyParse ใช้แปลงค่า input ที่ส่งผ่าน Post มานะครับ และสุดท้ายสร้าง server โดยใช้ express นะครับ ตรง server_key ให้ใส่ server_key ที่เราจดมาตะกี้ลงไปนะครับ (อันที่ยาวๆอ่ะ)</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"s2\">\"This is home page\"</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"s1\">'/open'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"p\">...</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/send'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"p\">...</span>\n<span class=\"p\">})</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">5555</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Program running on port : 5555'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>app.get ต่างๆคือการ route นะครับว่าเข้ามาผ่าน url นี้ให้ทำอะไรส่วน app.listen คือให้เริ่มทำงานที่ port ไหน</p>\n<ul>\n<li> เข้ามาผ่าน / ให้ตอบกลับไปว่านี่คือ Home Page นะย๊ะ</li> \n<li> /open รับ token เข้ามาผ่าน Post /open จริงๆตรงนี้ให้เราเก็บข้อมูล token เข้าสู่ฐานข้อมูลเพื่อใช้แจ้งเตือนในโอกาศต่อไป</li>\n<li> /send เมื่อมีการส่ง Get เข้ามาผ่าน /send ให้ส่งแจ้งเตือนไปตาม token ที่เรากับไว้ในฐานข้อมูล</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">  <span class=\"kd\">let</span> <span class=\"nx\">retry_times</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">sender</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">gcm</span><span class=\"p\">.</span><span class=\"nx\">Sender</span><span class=\"p\">(</span><span class=\"nx\">server_key</span><span class=\"p\">);</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">message</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">gcm</span><span class=\"p\">.</span><span class=\"nx\">Message</span><span class=\"p\">();</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">token</span><span class=\"p\">;</span>\n  <span class=\"nx\">message</span><span class=\"p\">.</span><span class=\"nx\">addData</span><span class=\"p\">(</span><span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'Hello Lady~!'</span><span class=\"p\">);</span>\n  <span class=\"nx\">message</span><span class=\"p\">.</span><span class=\"nx\">addData</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"s1\">'Hello Beutiful Girl!'</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>เตรียมตัวแปรสำหรับส่งแจ้งเตือน</p>\n<ul>\n<li>retry_times ถ้าส่งไม่สำเร็จจะให้ลองส่งใหม่กี่ครั้งสำหรับลูกผู้ชายอย่างผมให้โอกาศใครไม่เกิน 3 ครั้ง</li>\n<li>sender สร้าง sender ใช้สำหรับส่งแจ้งเตือน</li>\n<li>message สร้างข้อความสำหรับส่งไปให้มือถือของเรา</li>\n<li>token รหัสของมือถือที่มีการเชื่อมต่อเข้ามา</li>\n<li>message.addData ตั้งค่าต่างๆของ message เช่น หัวข้อ ข้อความ เสียงเป็นต้น</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">sender</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">message</span><span class=\"p\">,</span> <span class=\"nx\">token</span><span class=\"p\">,</span> <span class=\"nx\">retry_times</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'send noti!'</span><span class=\"p\">);</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"s1\">'you get message'</span><span class=\"p\">);</span>\n  <span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'cant send noti T^T'</span><span class=\"p\">);</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"s1\">'cant send message'</span><span class=\"p\">);</span>\n  <span class=\"p\">})</span></code></pre></figure>\n\n<p>sender.send ส่งแจ้งเตือนไปที่มือถือเมื่อทดสอบรันด้วยคำสั่งข้างล่างนี้เป็นอันเสร็จนะแจ๊ะ</p>\n<pre>\n  node index.js\n  Program running on port : 5555\n</pre>\n<h2 class=\"section-heading\">Start Ionic</h2>\n<p>เอาล่ะไม่ต้องบรรยายมากมาเริ่มกันเตอะ</p>\n<pre>\nionic start ionic-notification-client blank --v2\ncd ionic-notification-client\nionic platform add android\ncordova plugin add phonegap-plugin-push --variable SENDER_ID=\"XXXXXXX\"\nnpm install --save @ionic-native/push\n</pre>\n<p>SENDER_ID คือ id ที่ได้มาจาก Firebase ตอนแรกนะครับ(อันสั้นๆ) ต่อมาให้เปิดไฟล์ src/app/app.module.ts เพิ่ม Push เข้าไปใน Provider ตามข้างล่างนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">    <span class=\"nx\">providers</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">Push</span><span class=\"p\">,</span> <span class=\"p\">...</span> <span class=\"p\">]</span></code></pre></figure>\n\n<p>ต่อมาเราเปิดไฟล์ src/app/app.component.ts เพิ่ม Code ดังนี้เข้าไป</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Push</span><span class=\"p\">,</span> <span class=\"nx\">PushObject</span><span class=\"p\">,</span> <span class=\"nx\">PushOptions</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'@ionic-native/push'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Http</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'@angular/http'</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>import module ที่ต้องการใช้โดยมีรายละเอียดดังนี้</p>\n<ul>\n<li>Push, PushObject, PushOptions ใช้สำหรับส่ง Notification ไปที่มือถือ</li>\n<li>Http สำหรับส่ง Http ไปที่ Server ของเรา</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">constructor</span><span class=\"p\">(</span>\n    <span class=\"p\">...,</span> \n    <span class=\"kr\">private</span> <span class=\"nx\">push</span><span class=\"p\">:</span> <span class=\"nx\">Push</span>\n<span class=\"p\">)</span> </code></pre></figure>\n\n<p>ประกาศตัวแปร private ชื่อ push โดยนำค่ามาจาก Module Push (ที่ import มาข้างบนอ่ะ)</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">constructor</span><span class=\"p\">(</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">){</span>\n    <span class=\"nx\">platform</span><span class=\"p\">.</span><span class=\"nx\">ready</span><span class=\"p\">().</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"p\">...</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">initPushNotification</span><span class=\"p\">();</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>เรียกใช้ฟังชันชื่อ initPushNotification เมื่อแอพพร้อมทำงาน</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">initPushNotification</span><span class=\"p\">(){</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">options</span><span class=\"p\">:</span> <span class=\"nx\">PushOptions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n       <span class=\"na\">android</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n           <span class=\"na\">senderID</span><span class=\"p\">:</span> <span class=\"s1\">'492553210615'</span><span class=\"p\">,</span>\n           <span class=\"na\">sound</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n           <span class=\"na\">vibrate</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n       <span class=\"p\">}</span>\n    <span class=\"p\">};</span>\n    <span class=\"kd\">const</span> <span class=\"na\">pushObject</span><span class=\"p\">:</span> <span class=\"nx\">PushObject</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">pushObject</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'registration'</span><span class=\"p\">).</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span>\n      <span class=\"nx\">data</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://192.168.1.11:5555/open'</span><span class=\"p\">,{</span><span class=\"na\">token</span><span class=\"p\">:</span> <span class=\"nx\">data</span><span class=\"p\">}).</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span><span class=\"nx\">res</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n              <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'register send'</span><span class=\"p\">);</span>\n        <span class=\"p\">});</span>\n    <span class=\"p\">});</span>\n    <span class=\"nx\">pushObject</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'notification'</span><span class=\"p\">).</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span>\n      <span class=\"nx\">notification</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"s1\">'You are in app'</span><span class=\"p\">);</span>\n      <span class=\"p\">});</span>\n  <span class=\"p\">}</span></code></pre></figure>\n\n<p>สร้างฟังชันชื่อ initPushNotification สำหรับรับและส่งแจ้งเตือน <br /><b style=\"color:red;\">หมายเหตุ</b> http://192.168.1.11 ให้ใส่เป็น ip  เครื่องตัวเองนะจ๊ะ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">options</span><span class=\"p\">:</span> <span class=\"nx\">PushOptions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n       <span class=\"na\">android</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n           <span class=\"na\">senderID</span><span class=\"p\">:</span> <span class=\"s1\">'492553210615'</span><span class=\"p\">,</span>\n           <span class=\"na\">sound</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n           <span class=\"na\">vibrate</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n       <span class=\"p\">}</span>\n    <span class=\"p\">};</span></code></pre></figure>\n\n<p>เตรียมค่า option ต่างๆสำหรับการแจ้งเตือน</p>\n<ul>\n<li>senderID รหัสที่ได้มาจาก Firebase (รหัสเดียวกับตอนที่ add plugin อันสั้นๆ)</li>\n<li>sound ตั้งค่าเสียง</li>\n<li>vibrate ตั้งค่าสั่น</li>\n</ul>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">pushObject</span><span class=\"p\">:</span> <span class=\"nx\">PushObject</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>ตั่งค่า option สำหรับแจ้งเตือน</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">pushObject</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'registration'</span><span class=\"p\">).</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span>\n  <span class=\"nx\">data</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">);</span></code></pre></figure>\n\n<p>เป็น event ที่เกิดขึ้นเมื่อเปิด app โดยจะ return data ซึ่งมี token ของมือถือเครื่องนั้นๆ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://192.168.1.11:5555/open'</span><span class=\"p\">,{</span><span class=\"na\">token</span><span class=\"p\">:</span> <span class=\"nx\">data</span><span class=\"p\">}).</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span><span class=\"nx\">res</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'register send'</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span></code></pre></figure>\n\n<p>ส่ง token ไปที่ server ของเราเพื่อบันทึกข้อมูลหรืออะไรก็ว่าไป</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">pushObject</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'notification'</span><span class=\"p\">).</span><span class=\"nx\">subscribe</span><span class=\"p\">(</span>\n    <span class=\"nx\">notification</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"s1\">'You are in app'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เป็น event ที่เกิดขึ้นเมื่อได้รับการแจ้งเตือนจาก server เพียงแค่นี้เป็นอันเรียบร้อยโรงเรียนเตรียมแล้วจ้าทดสอบรันแอพด้วยคำสั่ง</p>\n<pre>\nionic run android\n</pre>\n<p><img src=\"/img/ionic-notification/img03.jpg\" />\n<span class=\"caption text-muted\">ผลลัพท์เมื่อรันแอพ</span></p>\n<p>เมื่อแอพเริ่มทำงานจะมีการ alert แบบนี้ปรากฎขึ้นมาแบบนี้</p>\n<p><img src=\"/img/ionic-notification/img04.png\" />\n<span class=\"caption text-muted\">token ของแอพที่แสดงใน server</span></p>\n<p>ส่วนใน server จะแสดง token ของเราที่ได้รับมาจากแอพให้ก๊อป token มาใส่ใน route /send แบบข้างล่างนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"p\">...</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/send'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"s1\">'fF6tMEynuYg:APA91bH8phSueoBfdOVMchBvBaxyyJVx4fe5msoZVbGAwLqAf...'</span><span class=\"p\">;</span> <span class=\"c1\">//token</span>\n  <span class=\"p\">...</span>\n<span class=\"p\">})</span></code></pre></figure>\n\n<p>หลังจากนั้นให้ลองออกจากแอพแล้วเปิด Browser ไปที่พาท <a href=\"http://localhost:5555/send\" target=\"_blank\">http://localhost:5555/send</a> จะมีแจ้งเตือนขึ้นดังภาพ</p>\n<p><img src=\"/img/ionic-notification/img04.jpg\" />\n<span class=\"caption text-muted\">เย้ๆ มีแจ้งเตือนแล้วจ้า</span></p>\n<p>เพียงเท่านี้ก็เสร็จแล้วจ้าสำหรับการแจ้งเตือนในบทความนี้ยังเป็นพื้นฐานมากๆ นะครับเพื่อนๆต้องเอาไปปรับปรุงต่อเพื่อนำมาใช้จริงต่อไปนะจ๊ะ</p>\n<p>ศึกษาเพิ่มเติม\n    <ul>\n        <li><a href=\"https://ionicframework.com/\" target=\"_blank\">Ionic2</a></li>\n        <li><a href=\"https://firebase.google.com/docs/cloud-messaging/\" target=\"_blank\">Firebase</a></li>\n    </ul>\n</p>\n<p>สำหรับ Code บน git ก็แปะไว้ก่อนเหมือนเดิมนะครับเพราะช่วงนี้ผมงานเยอะมากๆเลยอ่ะ = =\"</p>\n",
      "date_published": "Wed, 29 Mar 2017 05:41:00 +0700"
      },
    
    {
      "id": "http://localhost:4000/2017/03/23/how-to-use-cordovar-in-ionic2/",
      "url": "http://localhost:4000/2017/03/23/how-to-use-cordovar-in-ionic2/",
      "title": "วิธีการใช้งาน Cordova Plugin ใน Ionic2",
      "image": "img/cordovar-ionic/cover.jpeg",
      "content_html": "<p>สวัสดีครับเนื่องจากช่วงนี้งานเยอะมากๆเลย วันนี้เลยขอเขียน How To สั้นๆแต่คิดว่าน่าจะมีประโยชน์สำหรับคนที่ใช้งาน Ionic2 ไม่มากก็น้อยนะครับ</p>\n\n<p>สำหรับคนที่เขียน Hybrid Application ไม่ว่ามือใหม่หรือมือเก๋าก็น่าจะรู้กันดีอยู่แล้วนะครับว่าตัว Javascript ของเราเนี่ยไม่สามารถเข้าถึง Hardware ของเครื่องได้ตรงๆ เหมือนพวก Native Application เพราะฉะนั้นเราจึงต้องใช้ตัวกลางที่เรียกว่า <a href=\"https://cordova.apache.org/\" target=\"_blank\">Cordova</a> (ถ้าค่าย Adobe จะเรียกว่า PhoneGAP) ซึ่งเป็น Plugin ที่มีคนเขียนไว้ให้เข้าถึง Hardware ของเครื่องมีให้เลือกใช้งานหลากหลาย แต่ทว่าเหมือนบุญมีแต่กำบังด้วยความที่ Ionic2 ล้ำจัดดันทะลึ่งใช้ TypeScript แทน Javascript ล่ะไอ้ Typescript เนี่ยดันทะลึ่งไม่รู้จักพวก Browser Object บ้างตัวอีกเช่น window screen ทำให้พอเรียกใช้ใน TypeScript ก็จะ error นั่นเองนะจ๊ะ</p>\n\n<blockquote>Javascript ไม่สามารถเข้าถึง Hardware ตรงๆได้ต้องอาศัย Cordovar (PhoneGAP) เข้าถึง Hardware</blockquote>\n\n<h2 class=\"section-heading\">Fix it</h2>\n<p><img src=\"/img/cordovar-ionic/img01.png\" alt=\"การค้นหา Google ด้วย Selenium\" />\n<span class=\"caption text-muted\">มันคือไรอ่ะหนูไม่รู้จัก T^T</span></p>\n<p>ถ้าเจอปัญหาแบบในรูปข้างต้นนะครับสรุปวิธีแก้ง่ายๆเลยนะครับประกาศสิ่งที่มันต้องการในไฟล์ที่จะใช้งานหลัง import ซ่ะเช่น ในรูปข้างบนจะเห็นว่ามันไม่รู้จัก screen.orientation ก็แนะนำให้มันรู้จักซ่ะ เช่น</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">import</span> <span class=\"p\">...</span>\n\n<span class=\"nx\">declare</span> <span class=\"kd\">var</span> <span class=\"nx\">screen</span><span class=\"p\">:</span><span class=\"nx\">any</span><span class=\"p\">;</span>\n\n<span class=\"p\">...</span></code></pre></figure>\n\n<p>เป็นอันเรียบร้อยนะจ๊ะพอลองรันอีกครั้งจะเห็นว่าเขียวแล้วหลังจากนั้นก็เขียน Code ได้ตามปกตินะจ๊ะ</p>\n<p><img src=\"/img/cordovar-ionic/img02.png\" alt=\"การค้นหา Google ด้วย Selenium\" />\n<span class=\"caption text-muted\">ไม่งอแงแล้วนะจ๊ะ</span></p>\n\n<h2 class=\"section-heading\">Conclusion</h2>\n<ul>\n<li>ติดตั้ง Cordovar Plugin ที่ต้องการใช้งาน</li>\n<li>ประกาศสิ่งที่มันต้องการตามตัวอย่างข้างบน</li>\n<li>เขียน Code อย่างมีความสุข</li>\n</ul>\n<p>ศึกษาเพิ่มเติม <a href=\"https://cordova.apache.org/\" target=\"_blank\">Cordova</a></p>\n",
      "date_published": "Thu, 23 Mar 2017 07:24:00 +0700"
      },
    
    {
      "id": "http://localhost:4000/2017/03/18/ionic-chat/",
      "url": "http://localhost:4000/2017/03/18/ionic-chat/",
      "title": "วิธีทำแอพแชทง่ายๆ ด้วย Ionic2",
      "image": "img/ionic-chat/cover.jpg",
      "content_html": "<p>เบื่อไหมครับที่เวลาจะเขียนแอพขึ้นมาซักแอพหนึ่งเนี่ยต้องนั่งทำทั้ง Android iOS ไหนจะต้องเรียนรู้ภาษาใหม่ๆ ทั้ง Java Swift โหยลำบากวุ่นวายอ่ะ แล้วทำไมกูต้องไปเรียนรู้ภาษาใหม่ๆด้วยว่ะครับ ทั้งๆ ที่กูก็เขียบเว็ปเป็นอยู่แล้วทำไมจะเอาพวก Javascript CSS HTML มาทำแอพไม่ได้!! แต่ช้าก่อนนี่มันโลกยุค 2017 แล้วนะจ๊ะ TV Direct ขอนำเสนอ <a href=\"https://ionicframework.com/\" target=\"_blank\">Ionic2</a> !</p>\n\n<blockquote>สมัยก่อนการทำแอพขึ้นมาซักแอพนึงเนี่ยต้องทำทั้ง iOS และ Android แต่เดี๋ยวนี้ไม่ต้องแล้ว</blockquote>\n\n<h2 class=\"section-heading\">What is Ionic2</h2>\n<p>Ionic2 คือเครื่องมือที่ทำให้เราสามารถเขียนแอพเพียงครั้งเดียวสามารถทำงานได้ทุก Platform (หรือที่เรียกแบบเกร๋ๆ ว่า Cross Platform) โดยใช้แค่ Javascript CSS HTML ในการเขียนโปรแกรมซึ่งการทำงานของ Ionic2 ก็คือตัว Ionic2 จะทำตัวเป็นเหมือน Browser ที่แสดงเฉพาะเว็ปๆ เดียวก็คือเว็ปที่เราเขียนขึ้นมานั่นเองซึ่งเราจะเรียกแอพที่ทำงานในลักษณะนี้ว่า Hybrid App หลายคนอ่านมาถึงตรงนี้อาจจะคิดว่ามันก็คือเว็ปธรรมดาก็ไม่เหมือนแอพจริงๆ สิ ผมขอบอกตรงนี้นะครับนี่มันโลกยุคไหนแล้วถ้าไม่มีคนบอกผมนั่งยันนอนยันตะแคงข้างยันเลยว่ายังไงก็ดูไม่ออกเอาล่ะโม้มาเยอะแล้วมาเริ่มกันเถอะ</p>\n<blockquote>Javascript ที่ Ionic2 ใช้คือ <a href=\"https://angular.io/\" target=\"_blank\">Angular2</a> นะครับ</blockquote>\n<h2 class=\"section-heading\">Required &amp; Install</h2>\n<p>สิ่งที่ต้องการสำหรับใช้งาน</p>\n\n<ul>\n    <li>พื้นฐาน Node.js นิดหน่อย (อีกแล้วครับท่าน)</li>\n    <li>Node.js เวอร์ชันล่าสุด</li>\n    <li>Android Studio เพราะว่าเราต้องการตัว Android SDK นะจ๊ะถ้าใครไม่มีสามารถดาวโหลดได้ <a href=\"https://developer.android.com/studio/index.html\" target=\"_blank\">ที่นี่</a> (จริงๆแล้วดาวโหลดแค่ SDK tool ก็ได้แต่ว่าผมว่าลง Android Studio ไปเลยจะเวิร์คกว่า)</li>\n    <li>Geanymotion เป็น emulator ทดสอบแอพของเรานะครับถ้าใครไม่มีสามารถดาวโหลดได้ <a href=\"https://www.genymotion.com/\" target=\"_blank\">ที่นี่</a></li>\n    <li>Ionic2 ติดตั้งสามารถด้วยคำสั่งนี้ <pre>npm install -g cordova ionic</pre></li>\n    <li>ในบทความนี้จะไม่ลงรายละเอียดถึงตัว Angular2 เยอะนะครับควรจะศึกษามาบ้างเล็กน้อยเพื่อความเข้าใจ</li>\n</ul>\n\n<h2 class=\"section-heading\">Start Server</h2>\n<p>เมื่อเรามีสิ่งที่ต้องหมดแล้วต่อมาก็มาเริ่มกันเถอะ โดยเราจะเริ่มจากทำฝั่ง Server ก่อนนะจ๊ะ</p>\n<pre>\n    mkdir ionic-chat\n    cd ionic-chat\n    npm init\n    npm install socket.io express --save\n</pre>\n<p>socket.io สำหรับรับส่งข้อความแบบ real time ส่วน express ใช้เป็น server (จริงๆไม่ต้องใช้ก็ได้แต่ผมขี้เกียจเขียนเองอ่ะมีไรป่ะ) เมื่อทำเสร็จแล้วให้สร้างไฟล์ index.js ขึ้นมาโดยใส่ Code ข้างล่างนี้ลงไป</p>\n<p><b>index.js</b></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'express'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n<span class=\"kd\">const</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">).</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">io</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'socket.io'</span><span class=\"p\">).</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">server</span><span class=\"p\">);</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">((</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">header</span><span class=\"p\">(</span><span class=\"s2\">\"Access-Control-Allow-Origin\"</span><span class=\"p\">,</span> <span class=\"s2\">\"*\"</span><span class=\"p\">);</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">header</span><span class=\"p\">(</span><span class=\"s2\">\"Access-Control-Allow-Headers\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Origin, X-Requested-With, Content-Type, Accept\"</span><span class=\"p\">);</span>\n    <span class=\"nx\">next</span><span class=\"p\">();</span>\n<span class=\"p\">});</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span><span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"s1\">'This is ma awesome server'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n<span class=\"nx\">io</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'connection'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">client</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Client connected...'</span><span class=\"p\">);</span>\n    <span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'msg'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">message</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"s1\">'msg'</span><span class=\"p\">,</span> <span class=\"nx\">message</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">});</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">5555</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Program running on port : 5555'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>แค่นี้เหลาะครับสำหรับฝั่ง Server ของเราเป็นอันเรียบร้อยอธิบาย Code นะครับ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'express'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n<span class=\"kd\">const</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">).</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">io</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'socket.io'</span><span class=\"p\">).</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">server</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>เรียกใช้และสร้าง server โดยใช้ express และผูก Socket.io ไว้กับ server ที่ถูกสร้างขึ้น</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">((</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">header</span><span class=\"p\">(</span><span class=\"s2\">\"Access-Control-Allow-Origin\"</span><span class=\"p\">);</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">header</span><span class=\"p\">(</span><span class=\"s2\">\"Access-Control-Allow-Headers\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Origin, X-Requested-With, Content-Type, Accept\"</span><span class=\"p\">);</span>\n    <span class=\"nx\">next</span><span class=\"p\">();</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เซ็ท Header ให้เรียกใช้จาก server อื่นได้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span><span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"s1\">'This is ma awesome server'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เซ็ท route สำหรับคนที่เข้ามาใน server ผ่านทาง browser </p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">io</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'connection'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">client</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"p\">...</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เป็น event ที่จะเกิดขึ้นเมื่อมีผู้ใช้เชื่อมต่อเข้ามาในท่อ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'msg'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">message</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"p\">...</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เป็น event ที่จะเกิดขึ้นเมื่อผู้ใช้ส่งข้อมูลเข้ามาผ่านท่อที่ชื่อว่า msg</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">io</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"s1\">'msg'</span><span class=\"p\">,</span> <span class=\"nx\">message</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>ส่ง msg ที่ได้รับให้ผู้ใช้ทุกคน</p>\n<blockquote>\nถ้าหากต้องการส่งให้ทุกคนยกเว้นตัวคนส่งเองให้ใส่เป็น\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">broadcast</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"s1\">'msg'</span><span class=\"p\">,</span> <span class=\"nx\">message</span><span class=\"p\">);</span></code></pre></figure>\n\nแต่ถ้าต้องการส่งกลับไปให้คนส่งคนเดียวเท่านั้น(แล้วจะเรียกว่า chat ไหมหนอ) ให้ใส่เป็น\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"s1\">'msg'</span><span class=\"p\">,</span> <span class=\"nx\">message</span><span class=\"p\">);</span></code></pre></figure>\n\n</blockquote>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">5555</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Program running on port : 5555'</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เริ่มต้นการทำงานของ server ที่ port 5555 ด้วยคำสั่ง</p>\n<pre>node index.js</pre>\n<p>เมื่อทดลองเข้าผ่านหน้าเว็ปไปที่ <a href=\"http://localhost:5555\" target=\"_blank\">http://localhost:5555</a> จะได้หน้าตาดังภาพข้างล่างนี้</p>\n<p><img src=\"/img/ionic-chat/img01.png\" alt=\"ทดลองรัน server\" />\n<span class=\"caption text-muted\">ทดลองรัน server ผ่าน Browser</span></p>\n<h2 class=\"section-heading\">Start Ionic2</h2>\n<p>เอาล่ะครับน่าจะถึงเวลาที่ทุกคนรอคอยได้เขียนแอพจริงๆซักที 5555 เริ่มด้วยคำสั่ง</p>\n<pre>\nionic start ionic-chat-client blank --v2\ncd ionic-chat-client\n</pre>\n<p>เข้ามาจะเห็นไฟล์อะไรเยอะแยะเลยนะครับไม่ต้องตรงใจในตอนนี้เราสนใจแค่ในโฟรเดอร์ src ก็พอเมื่อเข้ามาจะเห็นว่าโครงสร้างมันคล้ายๆเว็ปไซด์เลยให้เปิดไฟล์ index.html ขึ้นมาหลังจากนั้นให้เพิ่มโหลด script นี้เข้าไป</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\" data-lang=\"html\"><span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></code></pre></figure>\n\n<p>เข้าไปที่ Page/home/home.html และแก้ไข Code ให้เป็นดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\" data-lang=\"html\"><span class=\"nt\">&lt;ion-header&gt;</span>\n  <span class=\"nt\">&lt;ion-navbar&gt;</span>\n    <span class=\"nt\">&lt;ion-title&gt;</span>\n      Ionic Blank\n    <span class=\"nt\">&lt;/ion-title&gt;</span>\n  <span class=\"nt\">&lt;/ion-navbar&gt;</span>\n<span class=\"nt\">&lt;/ion-header&gt;</span>\n\n<span class=\"nt\">&lt;ion-content</span> <span class=\"na\">padding</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;ion-card</span> <span class=\"err\">*</span><span class=\"na\">ngFor=</span><span class=\"s\">\"let msg of massage\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;ion-card-content&gt;</span>\n      {{ msg }}\n\n    <span class=\"nt\">&lt;/ion-card-content&gt;</span>\n  <span class=\"nt\">&lt;/ion-card&gt;</span>\n<span class=\"nt\">&lt;/ion-content&gt;</span>\n\n<span class=\"nt\">&lt;ion-footer&gt;</span>\n  <span class=\"nt\">&lt;ion-toolbar&gt;</span>\n    <span class=\"nt\">&lt;ion-item&gt;</span>\n      <span class=\"nt\">&lt;ion-label</span> <span class=\"na\">fixed</span><span class=\"nt\">&gt;</span>Massage: <span class=\"nt\">&lt;/ion-label&gt;</span>\n      <span class=\"nt\">&lt;ion-input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"err\">[(</span><span class=\"na\">ngModel</span><span class=\"err\">)]=\"</span><span class=\"na\">msg</span><span class=\"err\">\"</span><span class=\"nt\">&gt;&lt;/ion-input&gt;</span>\n    <span class=\"nt\">&lt;/ion-item&gt;</span>\n    <span class=\"nt\">&lt;ion-buttons</span> <span class=\"na\">end</span> <span class=\"err\">(</span><span class=\"na\">click</span><span class=\"err\">)=\"</span><span class=\"na\">send</span><span class=\"err\">()\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;button</span> <span class=\"na\">ion-button</span> <span class=\"na\">icon-right</span> <span class=\"na\">color=</span><span class=\"s\">\"royal\"</span><span class=\"nt\">&gt;</span>\n        Send\n        <span class=\"nt\">&lt;ion-icon</span> <span class=\"na\">name=</span><span class=\"s\">\"send\"</span><span class=\"nt\">&gt;&lt;/ion-icon&gt;</span>\n      <span class=\"nt\">&lt;/button&gt;</span>\n    <span class=\"nt\">&lt;/ion-buttons&gt;</span>\n  <span class=\"nt\">&lt;/ion-toolbar&gt;</span>\n<span class=\"nt\">&lt;/ion-footer&gt;</span></code></pre></figure>\n\n<p>จาก Code ข้างบนจะมีจุดสังเกตุ 3 จุดดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\" data-lang=\"html\"><span class=\"nt\">&lt;ion-card</span> <span class=\"err\">*</span><span class=\"na\">ngFor=</span><span class=\"s\">\"let msg of massage\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;ion-card-content&gt;</span>\n      {{ msg }}\n    <span class=\"nt\">&lt;/ion-card-content&gt;</span>\n<span class=\"nt\">&lt;/ion-card&gt;</span></code></pre></figure>\n\n<p>*ngFor=\"...\" คือการสั่งให้วนลูปของ Angular2 ส่วน {{ msg }} คือการแสดงค่า Object ของ Angular2 หรือเรียกว่า Two-way binding (จะไว้อธิบายในบทความต่อๆไปนะครับ) และส่วนสุดท้าย (click)=\"send()\" คือการควบคุม event click นะครับถ้าเป็น Javascript ธรรมดาก็อารมณ์ Onclick ประมาณนั้น</p>\n<p>รันจากนั้นเมื่อทดสอบรันด้วยคำสั่ง <pre>ionic serve</pre> ionic จะทำการเปิด Browser ขึ้นมาและจะได้หน้าตาเปล่าๆ ประมาณนี้นะครับ</p>\n<p><img src=\"/img/ionic-chat/img02.png\" alt=\"ทดสอบรันแอพ\" />\n<span class=\"caption text-muted\">ทดสอบรันแอพผ่าน Browser</span></p>\n<p>ต่อมาให้เราเปิดไฟล์ Page/home/home.ts ขึ้นมาและแก้ไขให้เป็นดังนี้นะครับ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Component</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'@angular/core'</span><span class=\"p\">;</span>\n\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">NavController</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'ionic-angular'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">declare</span> <span class=\"kd\">var</span> <span class=\"nx\">io</span><span class=\"p\">;</span>\n\n<span class=\"p\">@</span><span class=\"nd\">Component</span><span class=\"p\">({</span>\n  <span class=\"na\">selector</span><span class=\"p\">:</span> <span class=\"s1\">'page-home'</span><span class=\"p\">,</span>\n  <span class=\"na\">templateUrl</span><span class=\"p\">:</span> <span class=\"s1\">'home.html'</span>\n<span class=\"p\">})</span>\n<span class=\"k\">export</span> <span class=\"kd\">class</span> <span class=\"nx\">HomePage</span> <span class=\"p\">{</span>\n\n  <span class=\"nl\">socketHost</span><span class=\"p\">:</span> <span class=\"nx\">string</span><span class=\"p\">;</span>\n  <span class=\"nl\">socket</span><span class=\"p\">:</span> <span class=\"nx\">any</span><span class=\"p\">;</span>\n  <span class=\"nl\">massage</span><span class=\"p\">:</span> <span class=\"nx\">any</span><span class=\"p\">;</span>\n  <span class=\"nl\">msg</span><span class=\"p\">:</span> <span class=\"nx\">string</span><span class=\"p\">;</span>\n  <span class=\"kd\">constructor</span><span class=\"p\">(</span><span class=\"kr\">public</span> <span class=\"nx\">navCtrl</span><span class=\"p\">:</span> <span class=\"nx\">NavController</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socketHost</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://localhost:5555\"</span><span class=\"p\">;</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">massage</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socket</span> <span class=\"o\">=</span> <span class=\"nx\">io</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socketHost</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s2\">\"msg\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">msg</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">massage</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">msg</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">send</span><span class=\"p\">(){</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"s2\">\"msg\"</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">msg</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>อธิบาย Code นะครับ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">declare</span> <span class=\"kd\">var</span> <span class=\"nx\">io</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>คือการประกาศตัวแปร io นะครับจริงๆไม่ต้องประกาศก็ได้แต่ตัว Typescript ไม่รู้จัก io เลยต้องประกาศไม่งั้นจะงอแงเอา</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\">  <span class=\"nx\">socketHost</span><span class=\"p\">:</span> <span class=\"nx\">string</span><span class=\"p\">;</span>\n  <span class=\"nl\">socket</span><span class=\"p\">:</span> <span class=\"nl\">any</span><span class=\"p\">:</span> <span class=\"nx\">any</span><span class=\"p\">;</span>\n  <span class=\"nl\">massage</span><span class=\"p\">:</span> <span class=\"nx\">string</span><span class=\"p\">[];</span>\n  <span class=\"nl\">msg</span><span class=\"p\">:</span> <span class=\"nx\">string</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>ประกาศตัวแปลสำหรับเก็บค่าต่างๆ นะครับ \n<ul>\n<li>socketHost เป็น string เก็บ url ของ server</li>\n<li>socket สำหรับเก็บ socket นะครับไม่รู้จะให้ type อะไรเลยใส่เป็น any (any คือท่าไม้ตายคิด type ไม่ออก any ไปก่อน 555)</li>\n<li>massage สำหรับเก็บข้อความที่ chat ไปมาเป็น string array</li>\n<li>msg สำหรับเก็บข้อความจากช่อง input เป็น string</li>\n</ul></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socketHost</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://localhost:5555\"</span><span class=\"p\">;</span>\n<span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">massage</span> <span class=\"o\">=</span> <span class=\"p\">[];</span></code></pre></figure>\n\n<p>กำหนดค่าสำหรับตัวแปลต่างๆ</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socket</span> <span class=\"o\">=</span> <span class=\"nx\">io</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socketHost</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>สร้าง socket ขึ้นมา</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s2\">\"msg\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">msg</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">massage</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">msg</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เมื่อได้รับข้อความจาก server ผ่านทางท่อ msg ให้ push ใส่ array massage</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">send</span><span class=\"p\">(){</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"s2\">\"msg\"</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">msg</span><span class=\"p\">);</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span></code></pre></figure>\n\n<p>ส่งข้อความไปให้ server ผ่านทางท่อ msg แค่นี้เหลาะครับเสร็จแล้วหลังจากนั้นลองดูที่ terminal ที่รัน server ของเราถ้าขึ้นว่า Client connected... ดังภาพเป็นอันเรียบร้อยโรงเรียนเตรียม </p>\n<p><img src=\"/img/ionic-chat/img03.png\" alt=\"แอพเสร็จแล้ว\" />\n<span class=\"caption text-muted\">มีการเชื่อมต่อจาก client สู่ server</span></p>\n<p>ลองเปิด Browser ไปที่ <a href=\"http://localhost:8100/\" target=\"_blank\">http://localhost:8100</a> 2 หน้าต่างและทดสอบใช้จะได้ผลลัพท์ดังภาพ</p>\n<p><img src=\"/img/ionic-chat/img04.gif\" alt=\"ทดสอบเล่นแอพ\" />\n<span class=\"caption text-muted\">แชทได้แล้วจ้า</span></p>\n<p>สำหรับใครที่ต้องการทดสอบบน emulator ให้เปิด geanymotion และเปลี่ยน socketHost ไป ip เครื่องตัวเองเช่น</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">socketHost</span> <span class=\"o\">=</span> <span class=\"s2\">\"192.168.1.28:5555\"</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>และทดสอบรันด้วยคำสั่งข้างล่างนี้ก็เป็นเรียบร้อย</p>\n<pre>\nionic platform add android\nionic run android\n</pre>\n<p>ศึกษาเพิ่มเติม\n<ul>\n    <li><a href=\"https://ionicframework.com/\" target=\"_blank\">Ionic2</a></li>\n    <li><a href=\"https://socket.io/\" target=\"_blank\">socket.io</a></li>\n</ul></p>\n<p>สำหรับ Code บน git แปะไว้ก่อนนะครับเพราะตอนที่เขียนบทความนี้ดึกมากแล้วง่วงมักๆ ถ้าไม่ลืมจะตามมาอัพให้นะครับ</p>\n",
      "date_published": "Sun, 19 Mar 2017 03:07:00 +0700"
      },
    
    {
      "id": "http://localhost:4000/2017/03/17/line-notify/",
      "url": "http://localhost:4000/2017/03/17/line-notify/",
      "title": "แจ้งเตือนการทำงานของ Server แบบ Low cost ด้วย Line Notify",
      "image": "img/moniter/cover.jpg",
      "content_html": "<p>หลายคนคงจะทราบกันอยู่แล้วนะครับว่า Line ได้เปิดตัวบริการใหม่คือ Line Notify เมื่อไม่นานที่ผ่านมา\nซึ่งตัวไลน์ Notify เนี่ยจะแตกต่างกัน Line Bot ตรงที่ว่าจะตอบเราไม่ได้ และเวลาจะใช้ก็ต้องเชิญเข้า Group ก่อน\nซึ่งประโยชน์ของมันคือใช้สำหรับติดตามดูความเคลื่อนไหวของ service หรือ server ของเราก็ได้ ซึ่ง Line ก็มี Partner สำหรับบริการเราชื่อ <a href=\"https://mackerel.io/\" target=\"_blank\">Mackerel</a> แต่ประเด็อคือมันเสียตังน่ะสิ (= =\") ซึ่งแน่นอนว่าโปรแกรมเมอร์สายประหยัดอย่างเราไม่ยอมเสียเงินแน่นอน 555+ เพราะฉะนั้นเรามาเขียนเองกันดีกว่า</p>\n\n<h2 class=\"section-heading\">Required &amp; Install</h2>\n<p>สิ่งที่ต้องการในการ Monitor เซิฟเวอร์แบบ Low Cost ของเรามีดังนี้</p>\n<ul>\n    <li>ID Line เชื่อว่าทุกคนคงจะมีอยู่แล้วนะครัคงไม่สอนสมัคร (= =\")</li>\n    <li>กลุ่มไลน์ที่ต้องการให้ส่งข้อความ (ตรงนี้แล้วแต่นะ)</li>\n    <li>ความรู้ Node.js (จริงๆใช้อะไรเขียนก็ได้แต่ผมชอบ Node.js อ่ะมีไรป่ะ)</li>\n</ul>\n\n<h2 class=\"section-heading\">Start</h2>\n<p>ขั้นตอนแรกให้เราเข้าสู่เว็ปไซด์ <a href=\"https://notify-bot.line.me/en/\" target=\"_blank\">Line Notify</a> และ Login ให้เรียบร้อยหลังจากนั้นกดที่ My Page ตามภาพ</p>\n<p><img src=\"/img/moniter/img01.png\" alt=\"เข้าสู่หน้า My Page\" />\n<span class=\"caption text-muted\">เมนู My Page จะปรากฏเมื่อคลิ๊กที่ชื่อไลน์ของคุณ</span></p>\n<p>เลื่อนลงมาข้างล่างจะเห็นคำว่า Generate Token คลิ๊กโลดเมื่อคลิ๊กแล้วจะขึ้นหน้าตาดังภาพข้างล่างให้กรอกรายละเอียดให้เรียบร้อยในกรณีที่ต้องการให้ส่งข้อความให้เฉพาะตัวเองให้เลือก 1-on-1 chat</p>\n<p><img src=\"/img/moniter/img02.png\" alt=\"สร้าง Token\" />\n<span class=\"caption text-muted\">เลือก 1-on-1 chat ถ้าอยากคุยคนเดียว</span></p>\n<p>เมื่อสร้างเสร็จจะได้ Token มาหนึ่งอันให้ก๊อบปี้เก็บไว้ก่อน (อย่าทำหายล่ะ!) ต่อมาเรามาเริ่มเขียนโค้ดเพื่อส่งการแจ้งเตือนกันเถอะทำตามคุณครูนะค่ะเด็กๆ</p>\n<pre>\n    mkdir monitor-server\n    cd moniter-server\n    npm init\n    npm install monitor request --save\n</pre>\n<ul>\n    <li>monitor ใช้สำหรับติดตามการทำงานของ server</li>\n    <li>request ใช้สำหรับส่ง request ไปยัง Line Notify (จริงๆ เขียนเองก็ได้แต่ขี้เกียจ 555)</li>\n</ul>\n<p>ต่อมาสร้างไฟล์ index.js และใส่ Code ข้างล่างลงไป</p>\n<p><b>index.js</b></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">Monitor</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'monitor'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">request</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'request'</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">LOW_MEMORY_THRESHOLD</span> <span class=\"o\">=</span> <span class=\"mi\">100000000</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"s1\">'token'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">probeClass</span><span class=\"p\">:</span> <span class=\"s1\">'Process'</span><span class=\"p\">,</span>\n  <span class=\"na\">initParams</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">pollInterval</span><span class=\"p\">:</span> <span class=\"mi\">10000</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">var</span> <span class=\"nx\">processMonitor</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Monitor</span><span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">);</span>\n\n<span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'change'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">freemem</span> <span class=\"o\">=</span> <span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'freemem'</span><span class=\"p\">);</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">\"Your Free memory Left \"</span><span class=\"o\">+</span><span class=\"nx\">freemem</span><span class=\"p\">;</span>\n  <span class=\"nx\">request</span><span class=\"p\">({</span>\n     <span class=\"na\">method</span><span class=\"p\">:</span> <span class=\"s1\">'POST'</span><span class=\"p\">,</span>\n     <span class=\"na\">uri</span><span class=\"p\">:</span> <span class=\"s1\">'https://notify-api.line.me/api/notify'</span><span class=\"p\">,</span>\n     <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n       <span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/x-www-form-urlencoded'</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n     <span class=\"s1\">'auth'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n       <span class=\"s1\">'bearer'</span><span class=\"p\">:</span> <span class=\"nx\">token</span>\n  <span class=\"p\">},</span><span class=\"na\">form</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n       <span class=\"na\">message</span><span class=\"p\">:</span> <span class=\"nx\">msg</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span><span class=\"nx\">httpResponse</span><span class=\"p\">,</span><span class=\"nx\">body</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n     <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">));</span>\n     <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">httpResponse</span><span class=\"p\">));</span>\n     <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">body</span><span class=\"p\">));</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">});</span>\n\n<span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"nx\">connect</span><span class=\"p\">((</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"s1\">'Error connecting with the process probe: '</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">);</span>\n    <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>อธิบาย Code</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">const</span> <span class=\"nx\">Monitor</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'monitor'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">request</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'request'</span><span class=\"p\">)</span>\n<span class=\"kd\">const</span> <span class=\"nx\">LOW_MEMORY_THRESHOLD</span> <span class=\"o\">=</span> <span class=\"mi\">100000000</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span> <span class=\"nx\">token</span> <span class=\"o\">=</span> <span class=\"s1\">'token'</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>เรียกใช้งาน Module Monitor และ request ตั้งค่าแรมที่น้อยที่สุดหากน้อยกว่านี้ให้แจ้งเตือนใส่ token เตรียม (อย่าลืมใส่ token ของคุณล่ะ)</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">var</span> <span class=\"nx\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">probeClass</span><span class=\"p\">:</span> <span class=\"s1\">'Process'</span><span class=\"p\">,</span>\n  <span class=\"na\">initParams</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">pollInterval</span><span class=\"p\">:</span> <span class=\"mi\">10000</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">var</span> <span class=\"nx\">processMonitor</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Monitor</span><span class=\"p\">(</span><span class=\"nx\">options</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>เซ็ท Option สำหรับ Monitor และให้วนเช็คทุกๆ 10000 milliseconds และสร้างการ Monitor ใหม่</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'change'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">freemem</span> <span class=\"o\">=</span> <span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'freemem'</span><span class=\"p\">);</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">\"Your Free memory Left \"</span><span class=\"o\">+</span><span class=\"nx\">freemem</span><span class=\"p\">;</span>\n  <span class=\"nx\">request</span><span class=\"p\">({</span>\n     <span class=\"na\">method</span><span class=\"p\">:</span> <span class=\"s1\">'POST'</span><span class=\"p\">,</span>\n     <span class=\"na\">uri</span><span class=\"p\">:</span> <span class=\"s1\">'https://notify-api.line.me/api/notify'</span><span class=\"p\">,</span>\n     <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n       <span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/x-www-form-urlencoded'</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n     <span class=\"s1\">'auth'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n       <span class=\"s1\">'bearer'</span><span class=\"p\">:</span> <span class=\"nx\">token</span>\n  <span class=\"p\">},</span><span class=\"na\">form</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n       <span class=\"na\">message</span><span class=\"p\">:</span> <span class=\"nx\">msg</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span><span class=\"nx\">httpResponse</span><span class=\"p\">,</span><span class=\"nx\">body</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n     <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">));</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เมื่อสถานะของ Monitor เปลี่ยนจะเข้า event change ให้ดึงจำนวนแรมที่เหลือ และส่ง request ไปที่ Line Notify โดยฝัง token ไปกับ  Header และส่งข้อความที่สร้างขึ้นไปด้วย ซึ่งจะเห็นว่าจริงๆแล้ว Line Notify เนี่ยแค่ request ไปให้ถูกก็พอไม่จำเป็นต้องติดตั้ง Library อะไรของ Line เพิ่มเติมพิเศษเลย</p>\n<blockquote>Line Notify แค่ส่ง request ไปให้ถูกก็พอไม่จำเป็นต้องไปติดตั้ง Library ให้วุ่นวาย</blockquote>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"nx\">connect</span><span class=\"p\">((</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"s1\">'Error connecting with the process probe: '</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">);</span>\n    <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>ให้แสดง error และปิดโปรแกรมหากไม่สามารถดึงข้อมูลมาได้ เมื่อโค้ดเสร็จแล้วก็มาทำสอบกันด้วยคำสั่ง</p>\n<pre>node index.js</pre>\n<p>จะเห็นว่ามีไลน์ขึ้นมาดังภาพ</p>\n<p><img src=\"/img/moniter/img03.png\" alt=\"ผลการทดสอบ\" />\n<span class=\"caption text-muted\">รันปุ๊บขึ้นปั๊บ ถ้าไม่รับปั๊บก็คงไม่ขึ้นปุ๊บ</span></p>\n<p>ต่อมาจะเห็นว่าตอนนี้มันแจ้งเตือนบ่อยจนหน้ารำคาญให้เราปรับปปรุง Code ใน change event เป็นดังนี้</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'change'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">freemem</span> <span class=\"o\">=</span> <span class=\"nx\">processMonitor</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'freemem'</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">freemem</span> <span class=\"o\">&lt;</span> <span class=\"nx\">LOW_MEMORY_THRESHOLD</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"s1\">'Low memory warning: '</span> <span class=\"o\">+</span> <span class=\"nx\">freemem</span><span class=\"p\">;</span>\n    <span class=\"nx\">request</span><span class=\"p\">({</span>\n         <span class=\"na\">method</span><span class=\"p\">:</span> <span class=\"s1\">'POST'</span><span class=\"p\">,</span>\n         <span class=\"na\">uri</span><span class=\"p\">:</span> <span class=\"s1\">'https://notify-api.line.me/api/notify'</span><span class=\"p\">,</span>\n         <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n           <span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/x-www-form-urlencoded'</span><span class=\"p\">,</span>\n         <span class=\"p\">},</span>\n         <span class=\"s1\">'auth'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n           <span class=\"s1\">'bearer'</span><span class=\"p\">:</span> <span class=\"nx\">token</span>\n         <span class=\"p\">},</span><span class=\"na\">form</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n           <span class=\"na\">message</span><span class=\"p\">:</span> <span class=\"nx\">msg</span><span class=\"p\">,</span>\n         <span class=\"p\">}</span>\n    <span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span><span class=\"nx\">httpResponse</span><span class=\"p\">,</span><span class=\"nx\">body</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n         <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">));</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>เพียงเท่านี้เราก็จะได้รับการแจ้งเตือนเมื่อแรมเราเหลือน้อยกว่าที่เรากำหนดไว้แล้วล่ะครับสำหรับคนที่ต้องการตรวจสอบอย่างอื่นเช่น CPU, heapTotal, heapUsed สามารถดูได้ <a href=\"http://lorenwest.github.io/node-monitor/doc/classes/ProcessProbe.html\" target=\"_blank\">ที่นี่</a></p>\n<p>สำหรับคนที่ต้องการใช้ฟังชันอื่นๆของ Line Notify สามารถดูได้ <a href=\"https://notify-bot.line.me/doc/en/\" target=\"_blank\">ที่นี่</a></p>\n<p>สามารถดาวโหลด Code ได้ที่นี่ <a href=\"https://github.com/noob-studio/monitor-server\" target=\"_blank\">Github</a></p>\n",
      "date_published": "Sat, 18 Mar 2017 05:41:00 +0700"
      },
    
    {
      "id": "http://localhost:4000/2017/03/16/selenium-EP-01/",
      "url": "http://localhost:4000/2017/03/16/selenium-EP-01/",
      "title": "สอนวิธีใช้งาน Selenium เบื้องต้น",
      "image": "img/selenium/cover.jpg",
      "content_html": "<p>ในการจะทดสอบการทำงานของเว็ปไซด์ซักเว็ปหนึ่งเนี่ยเป็นเรื่องที่เหนื่อยและสิ้นเปลืองพลังงานชีวิตมากมายเลยนะครับ ยิ่งถ้าเป็นเว็ปไซด์ใหญ่ๆมีลิงค์มีปุ่มให้กดเยอะแยะด้วยแล้วยิ่งไม่ต้องสืบว่าจะใช้เวลานานซักแค่ไหน ดังนั้นจะดีแค่ไหนถ้าเราสามารถเขียน Bot ขึ้นมาเพื่อให้สามารถตรวจสอบการทำงานของเว็ปไซดโดยที่เราไม่ต้องทำอะไรเลยนั่งจิ๊บกาแฟชิลๆ อิอิ</p>\n\n<blockquote>โปรแกรมเมอร์ที่เก่งคือโปรแกรมเมอร์ที่ขี้เกียจ ปล. ขี้เกียจในทางที่ดีนะ</blockquote>\n\n<p>เชื่อไหมครับว่าไม่ได้มีแต่เราที่ขี้เกียจใครๆ เขาก็ขี้เกียจกันทั้งนั้น (= =\") แบบนี้จึงมีคนพัฒนาสิ่งที่เรียกว่า <a href=\"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver\" target=\"_blank\">Selenium Webdriver</a> ขึ้นเจ้า Selenium เนี่ยถ้าว่าง่ายๆก็คือ บอทสำหรับทดสอบการทดงานของเว็ปไซด์นั่นเอง</p>\n\n<h2 class=\"section-heading\">Required &amp; Install</h2>\n\n<p>ในการใช้ Selenium มีสิ่งที่ต้องการดังนี้</p>\n<ul>\n    <li>\n    พื้นฐาน Node.js นิดหน่อย (จริงๆ ตัว Selenium เขียนได้กับหลายภาษาเช่น Java, Python แต่ผมชอบ Node.js อ่ะมีไรป่ะ)</li>\n    <li>Node.js เวอร์ชันล่าสุด <a href=\"https://nodejs.org/en/\" target=\"_blank\">Download</a></li>\n    <li>Chrome Webdriver สำหรับ window สามารถดาวโหลดได้ <a href=\"https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver\" target=\"_blank\">ที่นี่</a> </li>\n    <li>Chrome Webdriver สำหรับ Mac สามารถติดตั้งโดยใช้ Homebrew ได้ใครไม่มีสามารถดาวโหลดได้ <a href=\"https://brew.sh/\" target=\"_blank\">ที่นี่</a> เมื่อติดตั้ง Homebrew เสร็จแล้วให้พิมพ์คำสั่งนี้ <pre>brew install chromedriver</pre></li>\n    <li>Chrome Webdriver สำหรับ Linux สามารถติดตั้งโดยใช้คำสั่งนี้ <pre>sudo apt-get install unzip;\nwget -O /tmp/chromedriver.zip http://chromedriver.googlecode.com/files/chromedriver_linux64_19.0.1068.0.zip \n&amp;&amp; sudo unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/;\n\n    </pre></li>\n</ul>\n\n<h2 class=\"section-heading\">Start</h2>\n\n<p>เมื่อเราทำการติดตั้ง และดาวโหลดสิ่งที่ต้องการมาแล้วก็มาเริ่มกันเถอะเปิด Terminal ขึ้นมาและพิมพ์คำสั่งตามนี้นะจ๊ะเด็กๆ</p>\n<pre>\nmkdir selenium-ep01\ncd selenium-ep01\nnpm init\nnpm install selenium-webdriver --save\n</pre>\n\n<p>เมื่อดำเนินการเสร็จแล้วสำหรับผู้ใช้ window ให้ลากไฟล์ webdriver ที่ดาวโหลดมามาใส่ สำหรับคนใช้ Mac กับ Linux ไม่ต้องนะจ๊ะ อิอิ ต่อมาเปิด Text editor สร้างไฟล์ชื่อ index.js ขึ้นมาแล้วใส่คำสั่งตามนี้</p>\n\n<p><b>index.js</b></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">var</span> <span class=\"nx\">webdriver</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'selenium-webdriver'</span><span class=\"p\">),</span>\n    <span class=\"nx\">By</span> <span class=\"o\">=</span> <span class=\"nx\">webdriver</span><span class=\"p\">.</span><span class=\"nx\">By</span><span class=\"p\">,</span>\n    <span class=\"nx\">until</span> <span class=\"o\">=</span> <span class=\"nx\">webdriver</span><span class=\"p\">.</span><span class=\"nx\">until</span><span class=\"p\">;</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">driver</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">webdriver</span><span class=\"p\">.</span><span class=\"nx\">Builder</span><span class=\"p\">()</span>\n    <span class=\"p\">.</span><span class=\"nx\">forBrowser</span><span class=\"p\">(</span><span class=\"s1\">'chrome'</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">build</span><span class=\"p\">();</span>\n\n<span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://www.google.com/ncr'</span><span class=\"p\">);</span>\n<span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"nx\">findElement</span><span class=\"p\">(</span><span class=\"nx\">By</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">(</span><span class=\"s1\">'q'</span><span class=\"p\">)).</span><span class=\"nx\">sendKeys</span><span class=\"p\">(</span><span class=\"s1\">'webdriver'</span><span class=\"p\">);</span>\n<span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"nx\">findElement</span><span class=\"p\">(</span><span class=\"nx\">By</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">(</span><span class=\"s1\">'btnG'</span><span class=\"p\">)).</span><span class=\"nx\">click</span><span class=\"p\">();</span>\n<span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"nx\">wait</span><span class=\"p\">(</span><span class=\"nx\">until</span><span class=\"p\">.</span><span class=\"nx\">titleIs</span><span class=\"p\">(</span><span class=\"s1\">'webdriver - Google Search'</span><span class=\"p\">),</span> <span class=\"mi\">1000</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>อธิบาย Code</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">var</span> <span class=\"nx\">webdriver</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'selenium-webdriver'</span><span class=\"p\">),</span>\n    <span class=\"nx\">By</span> <span class=\"o\">=</span> <span class=\"nx\">webdriver</span><span class=\"p\">.</span><span class=\"nx\">By</span><span class=\"p\">,</span>\n    <span class=\"nx\">until</span> <span class=\"o\">=</span> <span class=\"nx\">webdriver</span><span class=\"p\">.</span><span class=\"nx\">until</span><span class=\"p\">;</span></code></pre></figure>\n\n<p>ดึง Module ของ selenium-webdriver มาใช้และ Module อื่นๆที่จำเป็นมาใช้\n    <ul>\n        <li>By ใช้เข้าถึง Element ต่างๆในหน้าเว็ป</li>\n        <li>until เพื่อรอการทำงานของ Browser</li>\n</ul>\n</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"kd\">var</span> <span class=\"nx\">driver</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">webdriver</span><span class=\"p\">.</span><span class=\"nx\">Builder</span><span class=\"p\">()</span>\n    <span class=\"p\">.</span><span class=\"nx\">forBrowser</span><span class=\"p\">(</span><span class=\"s1\">'chrome'</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">build</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>สร้าง driver สำหรับ Google Chrome (สั่งให้เปิด Browser)</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://www.google.com/ncr'</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>เปิด Browser ไปที่ url https://www.google.com/ncr</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"nx\">findElement</span><span class=\"p\">(</span><span class=\"nx\">By</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">(</span><span class=\"s1\">'q'</span><span class=\"p\">)).</span><span class=\"nx\">sendKeys</span><span class=\"p\">(</span><span class=\"s1\">'webdriver'</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>หา Element ที่ attribute name ว่า q (ช่อง input) และใส่ค่าว่า webdriver</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"nx\">findElement</span><span class=\"p\">(</span><span class=\"nx\">By</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">(</span><span class=\"s1\">'btnG'</span><span class=\"p\">)).</span><span class=\"nx\">click</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>หา Element ที่ attribute name ว่า btnG (ปุ่มค้นหา) และคลิ๊ก</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"nx\">driver</span><span class=\"p\">.</span><span class=\"nx\">wait</span><span class=\"p\">(</span><span class=\"nx\">until</span><span class=\"p\">.</span><span class=\"nx\">titleIs</span><span class=\"p\">(</span><span class=\"s1\">'webdriver - Google Search'</span><span class=\"p\">),</span> <span class=\"mi\">1000</span><span class=\"p\">);</span></code></pre></figure>\n\n<p>รอจน title ของเว็ปขึ้นว่า 'webdriver - Google Search' เป็นอันเสร็จสิ้นกระบวนความรันด้วยคำสั่ง</p>\n<pre>node index.js</pre>\n<p>เมื่อรันเสร็จจะได้ผลดังภาพ</p>\n<p><img src=\"/img/selenium/img01.gif\" alt=\"การค้นหา Google ด้วย Selenium\" />\n<span class=\"caption text-muted\">ค้นหา Google ด้วย Selenium</span></p>\n<p>ศึกษาเพิ่มเติม <a href=\"http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/\" target=\"_blank\">Selenium API</a></p>\n<p>สามารถดาวโหลด Code ได้ที่นี่ <a href=\"https://github.com/noob-studio/selenium-ep01\" target=\"_blank\">Github</a></p>\n",
      "date_published": "Fri, 17 Mar 2017 05:41:00 +0700"
      }
    
  ]
}
